{"version":3,"sources":["app/History.js","components/common/Loading/loadingSlice.js","constants/storage.js","lib/SweetAlert.js","api/HttpClient.js","api/AuthApi.js","components/Auth/userSlice.js","components/File/fileSlice.js","app/Store.js","components/common/FormControls/Checkbox.jsx","components/common/FormControls/InputField.jsx","components/common/FormControls/PasswordField.jsx","components/Auth/LoginForm.jsx","components/Auth/Login.jsx","api/Address.js","constants/date-time.js","components/common/FormControls/DatePicker.jsx","components/common/FormControls/Select.jsx","components/common/Validations/Fullname.js","components/common/Validations/PhoneNumber.js","components/Auth/RegisterForm.jsx","components/Auth/Register.jsx","api/FilesApi.js","constants/file.js","helpers/SmoothScroll.js","lib/Toastr.js","components/File/FileChooseOption.jsx","components/common/FormControls/Template.jsx","helpers/ConvertDate.js","components/File/FileInfo.jsx","components/File/FileFill.jsx","components/File/FilePreview.jsx","components/File/FileResult.jsx","constants/user.js","helpers/CastObject.js","components/File/FileUser.jsx","components/File/Index.jsx","components/FileManage/FileAttachs.jsx","components/FileManage/FileCheckPermission.jsx","components/FileManage/FileInfo.jsx","components/FileManage/FileProcessing.jsx","components/FileManage/UserInfo.jsx","components/FileManage/FileDetail.jsx","components/common/@extensions/Pagination.jsx","app/Menu.js","components/common/Menu/Index.jsx","components/FileManage/Index.jsx","components/FileSearch/Index.jsx","api/FieldsApi.js","api/OrganizationsApi.js","api/ProceduresApi.js","components/common/@extensions/TreeView.jsx","components/common/OranizationsMenu/Index.jsx","components/Home/Index.jsx","components/Home/ProcedureDetail.jsx","components/Profile/Index.jsx","app/Routes.js","constants/guard.js","components/common/Footer/Index.jsx","components/common/Header/DesktopMenu.jsx","components/common/Header/MobileMenu.jsx","components/common/Header/Index.jsx","components/common/Loading/Index.jsx","components/NotFound/Index.jsx","App.js","index.js"],"names":["history","createBrowserHistory","loadingSlice","createSlice","name","initialState","reducers","loading","state","action","payload","actions","reducer","Storages","USER","TOKEN","REMEMBER_ACCOUNT","SweetAlert","success","message","Swal","fire","icon","title","html","successCallback","callback","confirmButtonText","then","result","isConfirmed","warningCallback","error","confirm","showCancelButton","backdrop","confirmButtonColor","cancelButtonText","HttpClient","axios","create","baseURL","process","headers","ContentType","Accept","paramsSerializer","params","queryString","stringify","refreshToken","a","AuthApi","refresh","token","data","localStorage","setItem","access_token","interceptors","request","use","config","accessToken","getItem","Promise","reject","response","status","url","search","newAccessToken","store","dispatch","logout","Object","keys","errors","map","key","join","register","post","login","user","get","createAsyncThunk","JSON","removeItem","current","parse","settings","extraReducers","fulfilled","fileSlice","step","procedure","option","clearFile","setStep","setProcedure","setOption","setUser","rootReducer","userReducer","loadingReducer","file","configureStore","Checkbox","label","form","checked","col","className","type","style","float","defaultProps","InputField","required","hiddenLabel","formState","isError","htmlFor","placeholder","PasswordField","useState","showPass","setShowPass","onClick","LoginForm","props","schema","yup","shape","email","password","dataAccount","remember","useForm","defaultValues","resolver","yupResolver","onSubmit","console","log","handleSubmit","to","role","Login","useDispatch","resultAction","unwrapResult","data_account","window","btoa","dataStore","atob","Address","getProvince","getDistrict","id","getWard","getAddress","LIST_YEAR","years","i","Date","getFullYear","push","getYear","LIST_MONTH","DatePicker","control","render","field","renderCustomHeader","date","changeYear","changeMonth","margin","display","justifyContent","value","onChange","target","getMonth","indexOf","dateFormat","selected","placeholderText","Select","options","e","disabled","FullnameValidate","test","split","length","PhoneNumberValidate","RegisterForm","full_name","identity_card","identity_card_date","identity_card_address","date_of_birth","phone_number","matches","province","district","ward","min","re_password","oneOf","provinces","setProvinces","districts","setDistricts","wards","setWards","useEffect","list","item","handleChangeProvince","handleChangeDistrict","reset","Register","FilesApi","getAll","getFiles","getById","access_key","getFileSteps","fileSubmit","cancel","FILE_STATUS","FILE_STATUS_CLASS_NAME","FILE_STEPS","active","smoothScroll","select","$","animate","scrollTop","offset","top","Toastr","toastr","FileChooseOption","useSelector","opt","goBack","Template","ConvertDate","hour","day","Math","floor","d_hour","FileInfo","first_organization","FileFill","onBackStep","attachs","templateData","thanh_phan_ho_so","address","flag","getValues","thanh_phan","index","FilePreview","width","organization","fax","website","FileResult","ROLES","castUser","cast","moment","created_at","updated_at","castTimestamps","obj","deleted_at","accepted_at","finished_at","FileUser","loggedIn","nUser","toDate","mountAddress","setValue","ward_name","filter","district_name","province_name","res","File","fileData","setFileData","fileResult","setFileResult","onbeforeunload","handleBackStep","handleNextStep","handleChooseOption","handleFileUser","handleFileFill","confirmFileSubmit","file_create_day","handleFileSubmit","fileStep","FileAttachs","files","href","path","rel","endsWith","FileCheckPermission","setKey","captcha","setCaptcha","disabledSubmit","sitekey","finished_day","add","processing_time","format","FileProcessing","steps","note","UserInfo","user_info","FileDetail","useParams","accessKey","setAccessKey","checkPermission","setCheckPermission","setFile","fileSteps","setFileSteps","getFileDetail","handleDelete","Pagination","totalRecords","perPage","onPageChange","pageCount","ceil","previousLabel","nextLabel","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","pageClassName","pageLinkClassName","breakClassName","breakLinkClassName","marginPagesDisplayed","pageRangeDisplayed","containerClassName","activeClassName","Menu","menu","class","UserMenu","loggedInUser","m","exact","FileManage","page","setPage","setTotalRecords","setData","setLoading","fetchData","id_user","total","FileSearch","location","useLocation","isShow","setIsShow","queryParams","useMemo","indentity_card","Number","parseInt","FieldsApi","OrganizationsApi","getGroupFields","ProceduresApi","getByKey","treeStyles","position","left","TreeView","content","canHide","open","count","childrens","child","OrganizationsMenu","groupFields","setGroupFields","setOrganizationId","setFieldId","getAllGroupFields","dt","organ","fields","reduce","c","v","count_procedures","organId","fieldId","Procedure","setProcedures","dataOrganizations","setDataOrganizations","organizationId","setLevel","dataFields","setDataFields","typingTimeout","useRef","getAllOragnizations","getAllFields","procedures","handlePageChange","handleChangeField","event","pros","dataField","id_field","searchProcedures","searchText","clearTimeout","setTimeout","RenderFunction","eligible","ProcedureDetail","getProcedureDetail","setProcedureRedux","option_is_choose","dangerouslySetInnerHTML","__html","cach_thuc_thuc_hien","doi_tuong_thuc_hien","trinh_tu_thuc_hien","thoi_han_giai_quyet","le_phi","so_luong_ho_so","yeu_cau_dieu_kien","can_cu_phap_ly","ket_qua_thuc_hien","Profile","Routes","main","guard","Footer","DesktopMenu","MenuLink","children","match","MobileMenu","handleLogoutClick","hideMobile","hide","isLogout","Header","data-toggle","data-target","src","alt","Loading","NotFound","App","listen","component","route","redirect","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f8927aec.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loadingSlice = createSlice({\r\n    name: 'loading',\r\n    initialState: false,\r\n    reducers: {\r\n        loading(state, action) {\r\n            return action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = loadingSlice;\r\nexport const { loading } = actions; // named export\r\nexport default reducer; // default export\r\n","const Storages = {\r\n    USER: 'USER',\r\n    TOKEN: 'ACCESS_TOKEN',\r\n    REMEMBER_ACCOUNT: 'REMEMBER_ACCOUNT',\r\n};\r\n\r\nexport default Storages;\r\n","import Swal from 'sweetalert2';\r\nimport './SweetAlert.scss';\r\n\r\nconst SweetAlert = {\r\n    success(message) {\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Thành công',\r\n            html: message,\r\n        });\r\n    },\r\n\r\n    successCallback(message, callback) {\r\n        Swal.fire({\r\n            title: 'Thành công',\r\n            html: message,\r\n            icon: 'success',\r\n            confirmButtonText: 'Đồng ý',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                callback();\r\n            }\r\n        });\r\n    },\r\n\r\n    warningCallback(message, callback) {\r\n        Swal.fire({\r\n            title: 'Cảnh báo',\r\n            html: message,\r\n            icon: 'warning',\r\n            confirmButtonText: 'Đồng ý',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                callback();\r\n            }\r\n        });\r\n    },\r\n\r\n    error(message) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Thất bại!',\r\n            html: message,\r\n        });\r\n    },\r\n\r\n    confirm(message, callback, icon = 'warning', title = 'Cảnh báo!') {\r\n        Swal.fire({\r\n            icon: icon,\r\n            title: title,\r\n            html: message,\r\n            showCancelButton: true,\r\n            backdrop: 'rgba(0,0,0,0.4)',\r\n            confirmButtonText: 'Đồng ý',\r\n            confirmButtonColor: '#AD4105',\r\n            cancelButtonText: 'Hủy',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                callback();\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nexport default SweetAlert;\r\n","import AuthApi from 'api/AuthApi';\r\nimport store from 'app/Store';\r\nimport axios from 'axios';\r\nimport { logout } from 'components/Auth/userSlice';\r\nimport { loading } from 'components/common/Loading/loadingSlice';\r\nimport Storages from 'constants/storage';\r\nimport SweetAlert from 'lib/SweetAlert';\r\nimport queryString from 'query-string';\r\n\r\nconst HttpClient = axios.create({\r\n    baseURL: process.env.REACT_APP_ROOT_API,\r\n    headers: {\r\n        ContentType: 'application/json',\r\n        Accept: 'application/json',\r\n    },\r\n    paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\nconst refreshToken = async () => {\r\n    const {\r\n        data: { token },\r\n    } = await AuthApi.refresh();\r\n\r\n    // save data to local storage\r\n    localStorage.setItem(Storages.TOKEN, token.access_token);\r\n\r\n    return token.access_token;\r\n};\r\n\r\n// Interceptors\r\n// Add a request interceptor\r\nHttpClient.interceptors.request.use(\r\n    function (config) {\r\n        const accessToken = localStorage.getItem(Storages.TOKEN);\r\n        if (accessToken) {\r\n            config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Add a response interceptor\r\nHttpClient.interceptors.response.use(\r\n    function (response) {\r\n        return response.data;\r\n    },\r\n    async function (error) {\r\n        const { config, status, data } = error.response;\r\n\r\n        const accessToken = localStorage.getItem(Storages.TOKEN);\r\n\r\n        if (accessToken && status === 401 && config.url.search('/logout') === -1) {\r\n            try {\r\n                let newAccessToken = await refreshToken();\r\n                config.headers['Authorization'] = `Bearer ${newAccessToken}`;\r\n                return HttpClient(config);\r\n            } catch (error) {}\r\n\r\n            SweetAlert.warningCallback('Phiên đăng nhập đã hết hạn.', async () => {\r\n                store.dispatch(loading(true));\r\n                try {\r\n                    await store.dispatch(logout());\r\n                } catch (error) {}\r\n                store.dispatch(loading(false));\r\n            });\r\n        }\r\n\r\n        let message = '';\r\n        if (status === 422) {\r\n            message = Object.keys(data.errors)\r\n                .map((key) => data.errors[key].join('<br>'))\r\n                .join('<br>');\r\n        } else {\r\n            message = data.message;\r\n        }\r\n\r\n        return Promise.reject({ name: `${status}`, message });\r\n    }\r\n);\r\n\r\nexport default HttpClient;\r\n","import HttpClient from './HttpClient';\r\n\r\nconst AuthApi = {\r\n    register(data) {\r\n        return HttpClient.post(`auth/register`, data);\r\n    },\r\n\r\n    login(data) {\r\n        return HttpClient.post(`auth/login`, data);\r\n    },\r\n\r\n    user() {\r\n        return HttpClient.get(`auth/user`);\r\n    },\r\n\r\n    refresh() {\r\n        return HttpClient.post(`auth/refresh`);\r\n    },\r\n\r\n    logout() {\r\n        return HttpClient.post(`auth/logout`);\r\n    },\r\n};\r\n\r\nexport default AuthApi;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport AuthApi from 'api/AuthApi';\r\nimport Storages from 'constants/storage';\r\n\r\nexport const register = createAsyncThunk('user/register', async (payload) => {\r\n    const {\r\n        data: { token, user },\r\n    } = await AuthApi.register(payload);\r\n\r\n    // save data to local storage\r\n    localStorage.setItem(Storages.TOKEN, token.access_token);\r\n    localStorage.setItem(Storages.USER, JSON.stringify(user));\r\n\r\n    return user;\r\n});\r\n\r\nexport const login = createAsyncThunk('user/login', async (payload) => {\r\n    const {\r\n        data: { token, user },\r\n    } = await AuthApi.login(payload);\r\n    // console.log('token', token);\r\n    // console.log('user', user);\r\n\r\n    // save data to local storage\r\n    localStorage.setItem(Storages.TOKEN, token.access_token);\r\n    localStorage.setItem(Storages.USER, JSON.stringify(user));\r\n\r\n    return user;\r\n});\r\n\r\nexport const refresh = createAsyncThunk('user/refresh', async () => {\r\n    const {\r\n        data: { token, user },\r\n    } = await AuthApi.refresh();\r\n\r\n    // save data to local storage\r\n    localStorage.setItem(Storages.TOKEN, token.access_token);\r\n    localStorage.setItem(Storages.USER, JSON.stringify(user));\r\n\r\n    return user;\r\n});\r\n\r\nexport const logout = createAsyncThunk('user/logout', async () => {\r\n    try {\r\n        await AuthApi.logout();\r\n    } catch (error) {}\r\n\r\n    // clear local storage\r\n    localStorage.removeItem(Storages.USER);\r\n    localStorage.removeItem(Storages.TOKEN);\r\n\r\n    return {};\r\n});\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        current: JSON.parse(localStorage.getItem(Storages.USER)) || {},\r\n        settings: {},\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [register.fulfilled]: (state, action) => {\r\n            state.current = action.payload;\r\n        },\r\n\r\n        [login.fulfilled]: (state, action) => {\r\n            state.current = action.payload;\r\n        },\r\n\r\n        [refresh.fulfilled]: (state, action) => {\r\n            state.current = action.payload;\r\n        },\r\n\r\n        [logout.fulfilled]: (state, action) => {\r\n            state.current = {};\r\n        },\r\n    },\r\n});\r\n\r\nconst { reducer } = userSlice;\r\nexport default reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst fileSlice = createSlice({\r\n    name: 'file',\r\n    initialState: {\r\n        step: 0,\r\n        procedure: null,\r\n        option: null,\r\n        user: null,\r\n    },\r\n    reducers: {\r\n        clearFile(state) {\r\n            return { step: 4, procedure: null, option: null, user: null };\r\n        },\r\n        setStep(state, action) {\r\n            state.step = action.payload;\r\n        },\r\n        setProcedure(state, action) {\r\n            state.procedure = action.payload;\r\n        },\r\n        setOption(state, action) {\r\n            state.option = action.payload;\r\n        },\r\n        setUser(state, action) {\r\n            state.user = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = fileSlice;\r\nexport const { clearFile, setStep, setProcedure, setOption, setUser } = actions; // named export\r\nexport default reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from 'components/Auth/userSlice';\r\nimport loadingReducer from 'components/common/Loading/loadingSlice';\r\nimport fileReducer from 'components/File/fileSlice';\r\n\r\nconst rootReducer = {\r\n    user: userReducer,\r\n    loading: loadingReducer,\r\n    file: fileReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nCheckbox.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n    col: PropTypes.number,\r\n    checked: PropTypes.bool,\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n    col: 12,\r\n};\r\n\r\nfunction Checkbox({ label, name, form, checked, col }) {\r\n    const { register } = form;\r\n\r\n    return (\r\n        <div className={`form-group col-md-${col}`}>\r\n            <div className=\"checkbox\">\r\n                <label>\r\n                    <input type=\"checkbox\" style={{ float: 'none' }} {...register(name)} checked={checked} />\r\n                    &nbsp;{label}\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nInputField.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n    required: PropTypes.bool,\r\n    col: PropTypes.number,\r\n    hiddenLabel: PropTypes.bool,\r\n};\r\n\r\nInputField.defaultProps = {\r\n    col: 12,\r\n};\r\n\r\nfunction InputField({ label, name, form, required, col, hiddenLabel }) {\r\n    const {\r\n        register,\r\n        formState: { errors },\r\n    } = form;\r\n\r\n    const isError = !!errors[name];\r\n\r\n    return (\r\n        <div className={`form-group col-md-${col}`}>\r\n            {!hiddenLabel && (\r\n                <label htmlFor={name}>\r\n                    {label} {required && <span className=\"text-danger\">(*)</span>}\r\n                </label>\r\n            )}\r\n            <input type=\"text\" className={`form-control ${isError && `invalid`}`} {...register(name)} placeholder={label} />\r\n            {isError && <p className=\"text-danger\">{errors[name]?.message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputField;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nPasswordField.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n    required: PropTypes.bool,\r\n    col: PropTypes.number,\r\n    hiddenLabel: PropTypes.bool,\r\n};\r\n\r\nPasswordField.defaultProps = {\r\n    col: 12,\r\n};\r\n\r\nfunction PasswordField({ label, name, form, required, col, hiddenLabel }) {\r\n    const {\r\n        register,\r\n        formState: { errors },\r\n    } = form;\r\n\r\n    const isError = !!errors[name];\r\n\r\n    const [showPass, setShowPass] = useState(false);\r\n\r\n    return (\r\n        <div className={`form-group col-md-${col}`}>\r\n            {!hiddenLabel && (\r\n                <label htmlFor={name}>\r\n                    {label} {required && <span className=\"text-danger\">(*)</span>}\r\n                </label>\r\n            )}\r\n            <div className=\"input-group\">\r\n                <input type={showPass ? `text` : `password`} className={`form-control ${isError && `invalid`}`} {...register(name)} placeholder={label} />\r\n                <div className=\"input-group-btn\">\r\n                    <button type=\"button\" className=\"btn btn-default\" onClick={() => setShowPass(!showPass)}>\r\n                        <span className={showPass ? `fa fa-eye` : `fa fa-eye-slash`}></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {isError && <p className=\"text-danger\">{errors[name]?.message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordField;\r\n","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport Checkbox from 'components/common/FormControls/Checkbox';\r\nimport InputField from 'components/common/FormControls/InputField';\r\nimport PasswordField from 'components/common/FormControls/PasswordField';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\n\r\nLoginForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nfunction LoginForm(props) {\r\n    const schema = yup.object().shape({\r\n        email: yup.string().required('Email không được để trống').email('Email không hợp lệ'),\r\n        password: yup.string().required('Mật khẩu không được bỏ trống'),\r\n    });\r\n\r\n    const { email, password, remember } = props.dataAccount;\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            email: email || '',\r\n            password: password || '',\r\n            remember: remember || false,\r\n        },\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        const { onSubmit } = props;\r\n        if (onSubmit) {\r\n            console.log(data);\r\n            await onSubmit(data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"text-center\">\r\n            <InputField label=\"Email đăng nhập\" name=\"email\" form={form} required hiddenLabel />\r\n            <PasswordField label=\"Mật khẩu\" name=\"password\" form={form} required hiddenLabel />\r\n\r\n            <Checkbox label=\"Ghi nhớ tài khoản\" name=\"remember\" form={form} />\r\n\r\n            <div className=\"form-group col-md-12\">\r\n                <button type=\"submit\" className=\"btn btn-info\">\r\n                    Đăng nhập\r\n                </button>\r\n            </div>\r\n            <div className=\"row m-3\">---- hoặc ----</div>\r\n            <div className=\"form-group\">\r\n                <Link to=\"/dang-ky\" className=\"btn btn-danger mr-3\" role=\"button\">\r\n                    Tạo tài khoản\r\n                </Link>\r\n                <Link to=\"/\" className=\"btn btn-warning\" role=\"button\">\r\n                    Quên mật khẩu?\r\n                </Link>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import { unwrapResult } from '@reduxjs/toolkit';\r\nimport { loading } from 'components/common/Loading/loadingSlice';\r\nimport SweetAlert from 'lib/SweetAlert';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport LoginForm from './LoginForm';\r\nimport { login } from './userSlice';\r\nimport Storages from 'constants/storage';\r\n\r\nLogin.propTypes = {};\r\n\r\nfunction Login(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (data) => {\r\n        dispatch(loading(true));\r\n        try {\r\n            const resultAction = await dispatch(login(data));\r\n            const result = unwrapResult(resultAction);\r\n\r\n            if(data.remember) {\r\n                let data_account = JSON.stringify(data);\r\n                localStorage.setItem(Storages.REMEMBER_ACCOUNT, window.btoa(data_account));\r\n            }\r\n        } catch (error) {\r\n            if (error.name == 401) {\r\n                SweetAlert.error('Thông tin đăng nhập không chính xác');\r\n            } else {\r\n                SweetAlert.error(error.message);\r\n            }\r\n        }\r\n        dispatch(loading(false));\r\n    };\r\n\r\n    let data_account = {};\r\n    const dataStore = localStorage.getItem(Storages.REMEMBER_ACCOUNT);\r\n\r\n    if(dataStore) {\r\n        data_account = JSON.parse(window.atob(dataStore));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container container-md\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">ĐĂNG NHẬP CHO CÔNG DÂN/DOANH NGHIỆP</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <LoginForm onSubmit={handleSubmit} dataAccount={data_account}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import HttpClient from './HttpClient';\r\n\r\nconst Address = {\r\n    getProvince() {\r\n        return HttpClient.get(`address/province`);\r\n    },\r\n\r\n    getDistrict(id) {\r\n        return HttpClient.get(`address/district/${id}`);\r\n    },\r\n\r\n    getWard(id) {\r\n        return HttpClient.get(`address/ward/${id}`);\r\n    },\r\n\r\n    getAddress(id) {\r\n        return HttpClient.get(`address/address/${id}`);\r\n    },\r\n};\r\n\r\nexport default Address;\r\n","const getYear = () => {\r\n    let years = [];\r\n    for(let i = 1900; i <= new Date().getFullYear(); i++) {\r\n        years.push(i);\r\n    }\r\n    return years;\r\n};\r\n\r\nexport const LIST_YEAR = getYear();\r\n\r\nexport const LIST_MONTH = [\r\n    'T1',\r\n    'T2',\r\n    'T3',\r\n    'T4',\r\n    'T5',\r\n    'T6',\r\n    'T7',\r\n    'T8',\r\n    'T9',\r\n    'T10',\r\n    'T11',\r\n    'T12',\r\n];\r\n","import { LIST_MONTH, LIST_YEAR } from 'constants/date-time';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport DatePickerUI from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Controller } from 'react-hook-form';\r\nimport './DatePicker.scss';\r\n\r\nDatePicker.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n    required: PropTypes.bool,\r\n    col: PropTypes.number,\r\n    hiddenLabel: PropTypes.bool,\r\n};\r\n\r\nDatePicker.defaultProps = {\r\n    col: 12,\r\n};\r\n\r\nfunction DatePicker({ label, name, form, required, col, hiddenLabel }) {\r\n    const {\r\n        control,\r\n        formState: { errors },\r\n    } = form;\r\n\r\n    const isError = !!errors[name];\r\n\r\n    return (\r\n        <Controller\r\n            name={name}\r\n            control={control}\r\n            render={({ field }) => (\r\n                <div className={`form-group col-md-${col}`}>\r\n                    {!hiddenLabel && (\r\n                        <label htmlFor={name}>\r\n                            {label} {required && <span className=\"text-danger\">(*)</span>}\r\n                        </label>\r\n                    )}\r\n\r\n                    <DatePickerUI\r\n                        {...field}\r\n                        renderCustomHeader={({ date, changeYear, changeMonth }) => (\r\n                            <div\r\n                                style={{\r\n                                    margin: 10,\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <select\r\n                                    className=\"form-control mr-1\"\r\n                                    value={date.getFullYear()}\r\n                                    onChange={({ target: { value } }) => changeYear(value)}\r\n                                >\r\n                                    {LIST_YEAR.map((option) => (\r\n                                        <option key={option} value={option}>\r\n                                            {option}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n\r\n                                <select\r\n                                    className=\"form-control mr-1\"\r\n                                    value={LIST_MONTH[date.getMonth()]}\r\n                                    onChange={({ target: { value } }) => changeMonth(LIST_MONTH.indexOf(value))}\r\n                                >\r\n                                    {LIST_MONTH.map((option) => (\r\n                                        <option key={option} value={option}>\r\n                                            {option}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        )}\r\n                        className=\"form-control\"\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        selected={field.value}\r\n                        placeholderText={label}\r\n                    />\r\n\r\n                    {isError && <p className=\"text-danger\">{errors[name]?.message}</p>}\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default DatePicker;\r\n","import React from 'react';\r\nimport { Controller } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\n\r\nSelect.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n    required: PropTypes.bool,\r\n    col: PropTypes.number,\r\n    hiddenLabel: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    loading: PropTypes.bool,\r\n};\r\n\r\nSelect.defaultProps = {\r\n    col: 12,\r\n};\r\n\r\nfunction Select({ label, name, form, options, required, col, hiddenLabel, onChange, loading }) {\r\n    const {\r\n        formState: { errors },\r\n    } = form;\r\n\r\n    const isError = !!errors[name];\r\n\r\n    return (\r\n        <Controller\r\n            name={name}\r\n            control={form.control}\r\n            render={({ field }) => (\r\n                <div className={`form-group col-md-${col}`}>\r\n                    {!hiddenLabel && (\r\n                        <label htmlFor={name}>\r\n                            {label} {required && <span className=\"text-danger\">(*)</span>}\r\n                        </label>\r\n                    )}\r\n\r\n                    <select\r\n                        name={name}\r\n                        className={`form-control ${isError && `invalid`}`}\r\n                        {...field}\r\n                        onChange={(e) => {\r\n                            onChange && onChange(e.target.value);\r\n                            field.onChange(e);\r\n                        }}\r\n                        disabled={loading}\r\n                    >\r\n                        <option>{`-- ${label} --`}</option>\r\n                        {options.map((option, i) => (\r\n                            <option key={i} value={option.value}>\r\n                                {option.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    {isError && <p className=\"text-danger\">{errors[name]?.message}</p>}\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Select;\r\n","const FullnameValidate = {\r\n    name: 'name is short',\r\n    message: 'Họ tên bạn nhập quá ngắn (ít nhất 2 từ)',\r\n    test: (value) => value.split(' ').length >= 2,\r\n};\r\n\r\nexport default FullnameValidate;","const PhoneNumberValidate = [/^(0)[0-9]{9}$/, 'Số điện thoại không hợp lệ'];\r\n\r\nexport default PhoneNumberValidate;\r\n","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport Address from 'api/Address';\r\nimport DatePicker from 'components/common/FormControls/DatePicker';\r\nimport InputField from 'components/common/FormControls/InputField';\r\nimport PasswordField from 'components/common/FormControls/PasswordField';\r\nimport Select from 'components/common/FormControls/Select';\r\nimport FullnameValidate from 'components/common/Validations/Fullname';\r\nimport PhoneNumberValidate from 'components/common/Validations/PhoneNumber';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\n\r\nRegisterForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nfunction RegisterForm(props) {\r\n    const schema = yup.object().shape({\r\n        email: yup.string().required('Email không được để trống').email('Email không hợp lệ'),\r\n        full_name: yup.string().required('Họ tên không được bỏ trống').test(FullnameValidate),\r\n        identity_card: yup.string().required('Số chứng minh nhân dân không được bỏ trống'),\r\n        identity_card_date: yup.string().required('Ngày cấp không được bỏ trống'),\r\n        identity_card_address: yup.string().required('Nơi cấp không được bỏ trống'),\r\n        date_of_birth: yup.string().required('Ngày sinh không được bỏ trống'),\r\n        phone_number: yup\r\n            .string()\r\n            .required('Số điện thoại không được bỏ trống')\r\n            .matches(...PhoneNumberValidate),\r\n        province: yup.string().required('Tỉnh/Thành phố không được bỏ trống'),\r\n        district: yup.string().required('Quận/Huyện không được bỏ trống'),\r\n        ward: yup.string().required('Xã/Phường/Thị trấn không được bỏ trống'),\r\n        password: yup.string().required('Mật khẩu không được bỏ trống').min(6, 'Mật khẩu ít nhất 6 kí tự'),\r\n        re_password: yup\r\n            .string()\r\n            .required('Mật khẩu xác nhận không được bỏ trống')\r\n            .oneOf([yup.ref('password')], 'Mật khẩu không trùng khớp'),\r\n    });\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            email: '',\r\n            full_name: '',\r\n            identity_card: '',\r\n            identity_card_date: new Date(),\r\n            identity_card_address: '',\r\n            date_of_birth: new Date(),\r\n            phone_number: '',\r\n            password: '',\r\n            re_password: '',\r\n        },\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [wards, setWards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const list = await Address.getProvince();\r\n                setProvinces(\r\n                    list.map((item) => ({\r\n                        label: item.name,\r\n                        value: item.id,\r\n                    }))\r\n                );\r\n            } catch (error) {}\r\n        })();\r\n    }, []);\r\n\r\n    const onSubmit = async (data) => {\r\n        const { onSubmit } = props;\r\n        if (onSubmit) {\r\n            await onSubmit(data);\r\n        }\r\n    };\r\n\r\n    const handleChangeProvince = async (value) => {\r\n        try {\r\n            setDistricts([]);\r\n            const list = await Address.getDistrict(value);\r\n            setDistricts(\r\n                list.map((item) => ({\r\n                    label: item.name,\r\n                    value: item.id,\r\n                }))\r\n            );\r\n        } catch (error) {}\r\n    };\r\n\r\n    const handleChangeDistrict = async (value) => {\r\n        try {\r\n            setWards([]);\r\n            const list = await Address.getWard(value);\r\n            setWards(\r\n                list.map((item) => ({\r\n                    label: item.name,\r\n                    value: item.id,\r\n                }))\r\n            );\r\n        } catch (error) {}\r\n    };\r\n\r\n    const handleFormReset = () => {\r\n        form.reset();\r\n        setDistricts([]);\r\n        setWards([]);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={form.handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n                <InputField col={4} label=\"Họ tên\" name=\"full_name\" form={form} required />\r\n                <InputField col={4} label=\"Tên cơ quan tổ chức\" name=\"organization\" form={form} />\r\n                <DatePicker col={4} label=\"Ngày sinh\" name=\"date_of_birth\" form={form} required />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <InputField col={4} label=\"Số CMND\" name=\"identity_card\" form={form} required />\r\n                <DatePicker col={4} label=\"Ngày cấp CMND\" name=\"identity_card_date\" form={form} required />\r\n                <InputField col={4} label=\"Nơi cấp CMND\" name=\"identity_card_address\" form={form} required />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <InputField col={4} label=\"Số điện thoại\" name=\"phone_number\" form={form} required />\r\n                <InputField col={4} label=\"Số fax\" name=\"fax\" form={form} />\r\n                <InputField col={4} label=\"Website\" name=\"website\" form={form} />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Select\r\n                    col={4}\r\n                    label=\"Tỉnh/Thành phố\"\r\n                    name=\"province\"\r\n                    options={provinces}\r\n                    onChange={handleChangeProvince}\r\n                    form={form}\r\n                    required\r\n                    loading={!provinces.length}\r\n                />\r\n                <Select\r\n                    col={4}\r\n                    label=\"Quận/Huyện\"\r\n                    name=\"district\"\r\n                    options={districts}\r\n                    onChange={handleChangeDistrict}\r\n                    form={form}\r\n                    required\r\n                    loading={!districts.length}\r\n                />\r\n                <Select col={4} label=\"Xã/Phường/Thị trấn\" name=\"ward\" options={wards} form={form} required loading={!wards.length} />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <InputField col={4} label=\"Email\" name=\"email\" form={form} required />\r\n                <PasswordField col={4} label=\"Mật khẩu\" name=\"password\" form={form} required />\r\n                <PasswordField col={4} label=\"Xác nhận mật khẩu\" name=\"re_password\" form={form} required />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-info\">\r\n                    Đăng ký\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-default ml-3\" onClick={handleFormReset}>\r\n                    Làm mới\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { unwrapResult } from '@reduxjs/toolkit';\r\nimport { loading } from 'components/common/Loading/loadingSlice';\r\nimport SweetAlert from 'lib/SweetAlert';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport RegisterForm from './RegisterForm';\r\nimport { register } from './userSlice';\r\n\r\nRegister.propTypes = {};\r\n\r\nfunction Register(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (data) => {\r\n        dispatch(loading(true));\r\n        try {\r\n            console.log('datav', data);\r\n            const resultAction = await dispatch(register(data));\r\n            unwrapResult(resultAction);\r\n            SweetAlert.success('Đăng kí tài khoản thành công.');\r\n        } catch (error) {\r\n            SweetAlert.error(error.message);\r\n        }\r\n        dispatch(loading(false));\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">ĐĂNG KÝ TÀI KHOẢN</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <RegisterForm onSubmit={handleSubmit} />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"row m-3\">---- hoặc ----</div>\r\n                                    <div className=\"form-group\">\r\n                                        <Link to=\"/login\" className=\"btn btn-danger mr-3\" role=\"button\">\r\n                                            Đăng nhập\r\n                                        </Link>\r\n                                        <Link to=\"/\" className=\"btn btn-warning\" role=\"button\">\r\n                                            Quên mật khẩu?\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import HttpClient from './HttpClient';\r\n\r\nconst FilesApi = {\r\n    getAll(params) {\r\n        return HttpClient.get(`files/get`, { params });\r\n    },\r\n\r\n    getFiles(params) {\r\n        return HttpClient.get(`files/get-files`, { params });\r\n    },\r\n\r\n    getById(id, access_key) {\r\n        return HttpClient.get(`files/get/${id}`, { params: { access_key } });\r\n    },\r\n\r\n    getFileSteps(id) {\r\n        return HttpClient.get(`files/get-file-steps/${id}`);\r\n    },\r\n\r\n    fileSubmit(data) {\r\n        return HttpClient.post(`files/submit`, data);\r\n    },\r\n\r\n    cancel(id) {\r\n        return HttpClient.post(`files/cancel`, { id });\r\n    },\r\n};\r\n\r\nexport default FilesApi;\r\n","export const FILE_STATUS = ['Chưa tiếp nhận', 'Đang xử lý', 'Hoàn thành', 'Đã hủy'];\r\nexport const FILE_STATUS_CLASS_NAME = ['default', 'warning', 'success', 'danger'];\r\n\r\nexport const FILE_STEPS = [\r\n    {\r\n        title: 'Chọn thủ tục',\r\n        icon: 'fa fa-exchange',\r\n        active: false,\r\n    },\r\n    {\r\n        title: 'Thông tin công dân',\r\n        icon: 'fa fa-address-card',\r\n        active: false,\r\n    },\r\n    {\r\n        title: 'Thông tin hồ sơ',\r\n        icon: 'fa fa-pencil-square',\r\n        active: false,\r\n    },\r\n    {\r\n        title: 'Xác nhận hồ sơ',\r\n        icon: 'fa fa-paper-plane-o',\r\n        active: false,\r\n    },\r\n];\r\n","import $ from 'jquery';\r\n\r\nexport const smoothScroll = (select) => {\r\n    $('html, body').animate(\r\n        {\r\n            scrollTop: select ? $(select).offset().top : 0,\r\n        },\r\n        300\r\n    );\r\n};\r\n","import toastr from 'toastr';\r\nimport 'toastr/toastr.scss';\r\nimport './Toastr.scss';\r\n\r\nconst Toastr = {\r\n    success(message) {\r\n        toastr.success(message, 'Thành công', { \"timeOut\": 2000 });\r\n    },\r\n\r\n    error(message) {\r\n        toastr.error(message, 'Thất bại', { \"timeOut\": 2000 });\r\n    },\r\n};\r\n\r\nexport default Toastr;\r\n","import history from 'app/History';\r\nimport Toastr from 'lib/Toastr';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nFileChooseOption.propTypes = {};\r\n\r\nfunction FileChooseOption(props) {\r\n    const { onSubmit } = props;\r\n\r\n    const file = useSelector((state) => state.file);\r\n    const [option, setOption] = useState();\r\n\r\n    const handleChange = (e) => {\r\n        setOption(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // if (!option) {\r\n        //     Toastr.error('Vui lòng chọn trường hợp giải quyết');\r\n        //     return;\r\n        // }\r\n        // console.log(file.procedure.options);\r\n        let opt = file.procedure.options[0];\r\n        onSubmit(opt);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('option', option);\r\n        handleSubmit();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">Chọn trường hợp hồ sơ</div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">Trường hợp giải quyết</div>\r\n                        <div className=\"col-md-6 form-group\">\r\n                            <select className=\"form-control\" onChange={handleChange}>\r\n                                <option value=\"\">-- Chọn trường hợp giải quyết --</option>\r\n                                {file.procedure.options.map((e, i) => (\r\n                                    <option key={e.id} value={e.id}>\r\n                                        {e.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <button className=\"btn btn-default\" onClick={() => history.goBack()}>\r\n                                <i className=\"fa fa-arrow-left\"></i> Quay lại\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-md-6 text-right\">\r\n                            <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n                                Tiếp tục <i className=\"fa fa-arrow-right\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileChooseOption;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nTemplate.propTypes = {\r\n    templates: PropTypes.array.isRequired,\r\n    onChangeValue: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction Template({ templates, onChangeValue }) {\r\n    const [data, setData] = useState(templates);\r\n\r\n    const changeFieldValue = (index, value) => {\r\n        let newArr = [...data];\r\n\r\n        newArr[index].value = value;\r\n        setData(newArr);\r\n    };\r\n\r\n    useEffect(() => {\r\n        onChangeValue(data);\r\n    }, [data]);\r\n\r\n    const renderComponent = (index, field) => {\r\n        switch (field.type) {\r\n            case 'text':\r\n                return (\r\n                    <input type=\"text\" className=\"form-control\" placeholder={field.label} onChange={(e) => changeFieldValue(index, e.target.value)} />\r\n                );\r\n            case 'number':\r\n                return (\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        placeholder={field.label}\r\n                        onChange={(e) => changeFieldValue(index, e.target.value)}\r\n                    />\r\n                );\r\n            case 'textbox':\r\n                return (\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        rows=\"5\"\r\n                        placeholder={field.label}\r\n                        onChange={(e) => changeFieldValue(index, e.target.value)}\r\n                    ></textarea>\r\n                );\r\n            case 'select':\r\n                return (\r\n                    <select className=\"form-control\" onChange={(e) => changeFieldValue(index, e.target.value)}>\r\n                        <option value=\"\">-- {field.label} --</option>\r\n                        {field.options.map((e, i) => (\r\n                            <option key={i} value={e.value}>\r\n                                {e.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {templates.map((e, i) => (\r\n                <div key={i} className=\"form-group\">\r\n                    <label>{e.label}</label>\r\n                    {renderComponent(i, e)}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Template;\r\n","export const ConvertDate = (hour) => {\r\n    if (hour >= 24) {\r\n        let day = Math.floor(hour / 24);\r\n        let d_hour = hour % 24;\r\n\r\n        // if (day >= 7) {\r\n        //     let week = Math.floor(day / 7);\r\n        //     let d_day = day % 7;\r\n        //     return `${week} tuần, ${d_day} ngày, ${d_hour} giờ`;\r\n        // }\r\n\r\n        if (d_hour > 0) {\r\n            return `${day} ngày, ${d_hour} giờ`;\r\n        }\r\n        return `${day} ngày`;\r\n    }\r\n\r\n    return `${hour} giờ`;\r\n};\r\n","import { ConvertDate } from 'helpers/ConvertDate';\r\nimport React from 'react';\r\n\r\nFileInfo.propTypes = {};\r\n\r\nfunction FileInfo(props) {\r\n    const { file } = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel panel-default mb-3\">\r\n                <div className=\"panel-heading\">\r\n                    <h3>Thông tin hồ sơ</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <h4>\r\n                        {file.procedure.key} - {file.procedure.name}\r\n                    </h4>\r\n                    {/* <div className=\"row mb-1\">\r\n                        <div className=\"col-md-2\">Mức độ:</div>\r\n                        <div className=\"col-md-6\">\r\n                            <span className=\"label label-warning\">Mức độ {file.procedure.level}</span>\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"row mb-1\">\r\n                        <div className=\"col-md-2\">Nơi tiếp nhận hồ sơ:</div>\r\n                        <div className=\"col-md-6\">{file.procedure.first_organization.name}</div>\r\n                    </div>\r\n                    <div className=\"row mb-1\">\r\n                        <div className=\"col-md-2\">Thời hạn giải quyết:</div>\r\n                        <b className=\"col-md-6 \">{ConvertDate(24)}</b>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileInfo;\r\n","import Template from 'components/common/FormControls/Template';\r\nimport Toastr from 'lib/Toastr';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport FileInfo from './FileInfo';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport InputField from 'components/common/FormControls/InputField';\r\n\r\nFileFill.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onBackStep: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction FileFill(props) {\r\n    const { onSubmit, onBackStep } = props;\r\n\r\n    const file = useSelector((state) => state.file);\r\n    const [attachs, setAttachs] = useState([]);\r\n    const [templateData, setTemplateData] = useState([]);\r\n\r\n    const thanh_phan_ho_so = file.procedure.thanh_phan_ho_so;\r\n\r\n    const handleChangeFile = (i, file) => {\r\n        let newArr = [...attachs];\r\n        newArr[i] = file;\r\n        setAttachs(newArr);\r\n    };\r\n\r\n    const schema = yup.object().shape({\r\n        address: yup.string().required('Địa chỉ không được bỏ trống'),\r\n    });\r\n\r\n    let defaultValues = {\r\n        thanh_phan_ho_so: [''],\r\n    };\r\n\r\n    const form = useForm({\r\n        defaultValues,\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const handleChangeTemplateData = (data) => {\r\n        setTemplateData(data);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        let flag = true;\r\n        for (let i = 0; i < attachs.length; i++) {\r\n            if (!attachs[i]) {\r\n                flag = false;\r\n            }\r\n        }\r\n        if (!flag) {\r\n            Toastr.error('Vui lòng tải lên đầy đủ tệp đính kèm theo quy định.');\r\n            return;\r\n        }\r\n        flag = true;\r\n        for (let i = 0; i < templateData.length; i++) {\r\n            if (!templateData[i].value) {\r\n                flag = false;\r\n            }\r\n        }\r\n        if (!flag) {\r\n            Toastr.error('Vui lòng điền đầy đủ biểu mẫu theo quy định.');\r\n            return;\r\n        }\r\n        const thanh_phan_ho_so = form.getValues('thanh_phan_ho_so');\r\n        onSubmit({ attachs, templateData, thanh_phan_ho_so });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FileInfo file={file} />\r\n\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                    <h3>Thành phần hồ sơ</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n                        {thanh_phan_ho_so.map((thanh_phan, index) => {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <InputField label={thanh_phan} name={`thanh_phan_ho_so[${index}]`} form={form} required />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                    <h3>Biểu mẫu giấy tờ</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"mb-3\">\r\n                        <b className=\"text-danger\">* Lưu ý: </b>\r\n                        <p>Cá nhân hoặc tổ chức vui lòng cung cấp đầy đủ thông tin theo yêu cầu của hồ sơ.</p>\r\n                    </div>\r\n\r\n                    {/* <Template templates={JSON.parse(file.option.template.data)} onChangeValue={handleChangeTemplateData} /> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <button type=\"button\" className=\"btn btn-default\" onClick={onBackStep}>\r\n                                <i className=\"fa fa-arrow-left\"></i> Quay lại\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-md-6 text-right\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>\r\n                                Tiếp tục <i className=\"fa fa-arrow-right\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileFill;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport FileInfo from './FileInfo';\r\n\r\nFilePreview.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onBackStep: PropTypes.func.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction FilePreview(props) {\r\n    const { onSubmit, onBackStep, file } = props;\r\n    console.log('file', file);\r\n    const thanh_phan_ho_so = file.procedure.thanh_phan_ho_so;\r\n    // console.log('file.file.thanh_phan_ho_so', file);\r\n    return (\r\n        <div>\r\n            <div className=\"mb-3 text-danger\">\r\n                <b>* Chú ý: </b>\r\n                <p>Cá nhân, tổ chức xác nhận lại toàn bộ thông tin hồ sơ cho chính xác sau đó ấn Nộp hồ sơ để hoàn tất thủ tục.</p>\r\n            </div>\r\n\r\n            <FileInfo file={file} />\r\n\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                    <h3>Xác nhận thông tin công dân, tổ chức</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th style={{ width: '18%' }}>Họ tên</th>\r\n                                    <td>{file.user.full_name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Tên cơ quan</th>\r\n                                    <td>{file.user.organization}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Email</th>\r\n                                    <td>{file.user.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Số điện thoại</th>\r\n                                    <td>{file.user.phone_number}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Địa chỉ</th>\r\n                                    <td>{file.user.address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Số CMND</th>\r\n                                    <td>{file.user.identity_card}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Ngày cấp</th>\r\n                                    <td>{file.user.identity_card_date}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Nơi cấp</th>\r\n                                    <td>{file.user.identity_card_address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Fax</th>\r\n                                    <td>{file.user.fax}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Website</th>\r\n                                    <td>{file.user.website}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                    <h3>Xác nhận thông tin hồ sơ</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: '50%' }}>Tên thành phần</th>\r\n                                    <th>Thông tin</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {thanh_phan_ho_so.map((e, i) => (\r\n                                    <tr key={i}>\r\n                                        <td>{e}</td>\r\n                                        <td>{file.file.thanh_phan_ho_so[i]}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        {/* \r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <tbody>\r\n                                {file.file.templateData.map((e, i) => (\r\n                                    <tr key={i}>\r\n                                        <th style={{ width: '30%' }}>{e.label}</th>\r\n                                        <td>{e.value}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <button type=\"button\" className=\"btn btn-default\" onClick={onBackStep}>\r\n                        <i className=\"fa fa-arrow-left\"></i> Quay lại\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-md-6 text-right\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" onClick={() => onSubmit(file)}>\r\n                        <i className=\"fa fa-send\"></i>&nbsp;&nbsp;Xác nhận nộp hồ sơ\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilePreview;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nFileResult.propTypes = {\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction FileResult(props) {\r\n    const { file } = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel panel-success\">\r\n                <div className=\"panel-heading text-center\">\r\n                    <h4>Thành công</h4>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"text-center text-success\">\r\n                        <h3>Đã nộp hồ sơ thành công</h3>\r\n                    </div>\r\n                    <div className=\"text-danger\">\r\n                        Vui lòng lưu lại nhưng thông tin sau để dễ dàng cho việc tra cứu và chỉnh sửa hồ sơ (Thông tin này chỉ được cấp 1 lần duy\r\n                        nhất)\r\n                    </div>\r\n                    <div className=\"table-responsive mt-3\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th style={{ width: '18%' }}>Mã hồ sơ</th>\r\n                                    <td>{file.key}</td>\r\n                                </tr>\r\n                                {/* <tr>\r\n                                    <th>Mã bí mật (Để sửa hồ sơ)</th>\r\n                                    <td>\r\n                                        <b className=\"text-danger\">{file.access_key}</b>\r\n                                    </td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-md-12 text-center\">\r\n                    <Link to=\"/\" role=\"button\" className=\"btn btn-success\">\r\n                        <i className=\"fa fa-home\"></i>&nbsp;&nbsp;Về trang chủ\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileResult;\r\n","export const ROLES = ['Công dân', 'Cán bộ', 'Quản trị viên'];","import { ROLES } from 'constants/user';\r\nimport moment from 'moment';\r\n\r\nexport const castUser = (user) => {\r\n    let newUser = {\r\n        ...user,\r\n        cast: {\r\n            role: ROLES[user.role],\r\n            identity_card_date: moment(user.identity_card_date || new Date()),\r\n            date_of_birth: moment(user.date_of_birth || new Date()),\r\n            created_at: moment(user.created_at || new Date()),\r\n            updated_at: moment(user.updated_at || new Date()),\r\n        },\r\n    };\r\n    return newUser;\r\n};\r\n\r\nexport const castTimestamps = (obj) => {\r\n    let newObj = {\r\n        ...obj,\r\n        cast: {\r\n            created_at: moment(obj.created_at || new Date()),\r\n            updated_at: moment(obj.updated_at || new Date()),\r\n            deleted_at: moment(obj.deleted_at || new Date()),\r\n            accepted_at: moment(obj.accepted_at || new Date()),\r\n            finished_at: moment(obj.finished_at || new Date()),\r\n        },\r\n    };\r\n    return newObj;\r\n};\r\n","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport Address from 'api/Address';\r\nimport DatePicker from 'components/common/FormControls/DatePicker';\r\nimport InputField from 'components/common/FormControls/InputField';\r\nimport Select from 'components/common/FormControls/Select';\r\nimport FullnameValidate from 'components/common/Validations/Fullname';\r\nimport PhoneNumberValidate from 'components/common/Validations/PhoneNumber';\r\nimport { castUser } from 'helpers/CastObject';\r\nimport Toastr from 'lib/Toastr';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport FileInfo from './FileInfo';\r\nimport PropTypes from 'prop-types';\r\nimport AuthApi from 'api/AuthApi';\r\nimport SweetAlert from 'lib/SweetAlert';\r\n\r\nFileUser.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onBackStep: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction FileUser(props) {\r\n    const { onSubmit, onBackStep } = props;\r\n\r\n    const user = useSelector((state) => state.user.current);\r\n    const loggedIn = !!user.id;\r\n\r\n    const file = useSelector((state) => state.file);\r\n\r\n    const schema = yup.object().shape({\r\n        full_name: yup.string().required('Họ tên không được bỏ trống').test(FullnameValidate),\r\n        phone_number: yup\r\n            .string()\r\n            .required('Số điện thoại không được bỏ trống')\r\n            .matches(...PhoneNumberValidate),\r\n        province: yup.string().required('Tỉnh/Thành phố không được bỏ trống'),\r\n        identity_card_date: yup.string().required('Ngày CMND/CCCD cấp không được bỏ trống'),\r\n        identity_card: yup.string().required('Số CMND/CCCD không được bỏ trống'),\r\n        identity_card_address: yup.string().required('Nơi cấp CMND/CCCD không được bỏ trống'),\r\n        district: yup.string().required('Quận/Huyện không được bỏ trống'),\r\n        ward: yup.string().required('Xã/Phường/Thị trấn không được bỏ trống'),\r\n        address: yup.string().required('Địa chỉ không được bỏ trống'),\r\n    });\r\n\r\n    let defaultValues = {\r\n        email: '',\r\n        full_name: '',\r\n        identity_card: '',\r\n        identity_card_date: new Date(),\r\n        date_of_birth: new Date(),\r\n        identity_card_address: '',\r\n        phone_number: '',\r\n    };\r\n\r\n    if (loggedIn) {\r\n        let nUser = castUser(user);\r\n        defaultValues = {\r\n            id: nUser.id,\r\n            email: nUser.email,\r\n            full_name: nUser.full_name,\r\n            organization: nUser.organization,\r\n            identity_card: nUser.identity_card,\r\n            identity_card_date: nUser.cast.identity_card_date.toDate(),\r\n            date_of_birth: nUser.cast.date_of_birth.toDate(),\r\n            identity_card_address: nUser.identity_card_address,\r\n            phone_number: nUser.phone_number,\r\n            fax: nUser.fax,\r\n            website: nUser.website,\r\n        };\r\n    }\r\n\r\n    const form = useForm({\r\n        defaultValues,\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [wards, setWards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const list = await Address.getProvince();\r\n                setProvinces(\r\n                    list.map((item) => ({\r\n                        label: item.name,\r\n                        value: item.id,\r\n                    }))\r\n                );\r\n            } catch (error) {}\r\n        })();\r\n        mountAddress(user.ward);\r\n    }, []);\r\n\r\n    const mountAddress = async (ward) => {\r\n        try {\r\n            const data = await Address.getAddress(ward);\r\n            setWards(\r\n                data.wards.map((item) => ({\r\n                    label: item.name,\r\n                    value: item.id,\r\n                }))\r\n            );\r\n            setDistricts(\r\n                data.districts.map((item) => ({\r\n                    label: item.name,\r\n                    value: item.id,\r\n                }))\r\n            );\r\n            form.setValue('province', data.province);\r\n            form.setValue('district', data.district);\r\n            form.setValue('ward', data.ward);\r\n        } catch (error) {\r\n            console.error(error);\r\n            Toastr.error('Lỗi load danh sách Quận/Huyện, Xã/Phường');\r\n        }\r\n    };\r\n\r\n    const handleChangeProvince = async (value) => {\r\n        try {\r\n            setDistricts([]);\r\n            const list = await Address.getDistrict(value);\r\n            setDistricts(\r\n                list.map((item) => ({\r\n                    label: item.name,\r\n                    value: item.id,\r\n                }))\r\n            );\r\n        } catch (error) {}\r\n    };\r\n\r\n    const handleChangeDistrict = async (value) => {\r\n        try {\r\n            setWards([]);\r\n            const list = await Address.getWard(value);\r\n            setWards(\r\n                list.map((item) => ({\r\n                    label: item.name,\r\n                    value: item.id,\r\n                }))\r\n            );\r\n        } catch (error) {}\r\n    };\r\n\r\n    const handleSubmit = async (user) => {\r\n        // user.identity_card_date = user.identity_card_date.toISOString();\r\n\r\n        let ward_name = wards.filter((e) => e.value == user.ward)[0].label;\r\n        let district_name = districts.filter((e) => e.value == user.district)[0].label;\r\n        let province_name = provinces.filter((e) => e.value == user.province)[0].label;\r\n\r\n        user.address += `, ${ward_name}, ${district_name}, ${province_name}`;\r\n        user.password = user.phone_number;\r\n        try {\r\n            if (!loggedIn) {\r\n                const res = await AuthApi.register(user);\r\n                if (res.success) {\r\n                    SweetAlert.success(res.message);\r\n                    onSubmit(res.data.user);\r\n                } else {\r\n                    SweetAlert.error(res.message);\r\n                }\r\n            } else {\r\n                onSubmit(user);\r\n            }\r\n        } catch (error) {\r\n            SweetAlert.error(error.message);\r\n        }\r\n\r\n        //\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FileInfo file={file} />\r\n\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                    <h3>Nhập thông tin công dân</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    {!loggedIn && (\r\n                        <div className=\"mb-3\">\r\n                            <b className=\"text-danger\">* Mẹo: </b>{' '}\r\n                            <Link className=\"text-warning\" to=\"/dang-nhap\">\r\n                                Đăng nhập\r\n                            </Link>{' '}\r\n                            để thông tin của bạn được điền tự động và quản lý hồ sơ dễ dàng hơn.\r\n                        </div>\r\n                    )}\r\n                    <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n                        <div className=\"row\">\r\n                            <InputField col={4} label=\"Họ tên\" name=\"full_name\" form={form} required />\r\n                            <DatePicker col={4} label=\"Ngày sinh\" name=\"date_of_birth\" form={form} required />\r\n                            <InputField col={4} label=\"Email\" name=\"email\" form={form} required />\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <InputField col={4} label=\"Số CMND\" name=\"identity_card\" form={form} required />\r\n                            <DatePicker col={4} label=\"Ngày cấp CMND\" name=\"identity_card_date\" form={form} required />\r\n                            <InputField col={4} label=\"Nơi cấp CMND\" name=\"identity_card_address\" form={form} required />\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <InputField col={4} label=\"Số điện thoại\" name=\"phone_number\" form={form} required />\r\n                            <InputField col={4} label=\"Số fax\" name=\"fax\" form={form} />\r\n                            <InputField col={4} label=\"Website\" name=\"website\" form={form} />\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <Select\r\n                                col={4}\r\n                                label=\"Tỉnh/Thành phố\"\r\n                                name=\"province\"\r\n                                options={provinces}\r\n                                onChange={handleChangeProvince}\r\n                                form={form}\r\n                                required\r\n                                loading={!provinces.length}\r\n                            />\r\n                            <Select\r\n                                col={4}\r\n                                label=\"Quận/Huyện\"\r\n                                name=\"district\"\r\n                                options={districts}\r\n                                onChange={handleChangeDistrict}\r\n                                form={form}\r\n                                required\r\n                                loading={!districts.length}\r\n                            />\r\n                            <Select col={4} label=\"Xã/Phường/Thị trấn\" name=\"ward\" options={wards} form={form} required loading={!wards.length} />\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <InputField label=\"Địa chỉ cụ thể\" name=\"address\" form={form} required />\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <button type=\"button\" className=\"btn btn-default\" onClick={onBackStep}>\r\n                                    <i className=\"fa fa-arrow-left\"></i> Quay lại\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-md-6 text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Tiếp tục <i className=\"fa fa-arrow-right\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUser;\r\n","import FilesApi from 'api/FilesApi';\r\nimport history from 'app/History';\r\nimport { loading } from 'components/common/Loading/loadingSlice';\r\nimport { FILE_STEPS } from 'constants/file';\r\nimport { ConvertFormFile } from 'helpers/ConvertFormFile';\r\nimport { smoothScroll } from 'helpers/SmoothScroll';\r\nimport SweetAlert from 'lib/SweetAlert';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileChooseOption from './FileChooseOption';\r\nimport FileFill from './FileFill';\r\nimport FilePreview from './FilePreview';\r\nimport FileResult from './FileResult';\r\nimport { clearFile, setOption, setStep, setUser } from './fileSlice';\r\nimport FileUser from './FileUser';\r\nimport Toastr from 'lib/Toastr';\r\n//9874\r\n\r\nFile.propTypes = {};\r\n\r\nfunction File(props) {\r\n    const dispatch = useDispatch();\r\n    const file = useSelector((state) => state.file);\r\n\r\n    const [fileData, setFileData] = useState(null);\r\n    const [fileResult, setFileResult] = useState({});\r\n\r\n    useEffect(() => {\r\n        window.onbeforeunload = () => {\r\n            dispatch(clearFile());\r\n            return 'Bạn có chắc muốn rời khỏi trang này? Mọi thông tin sẽ không được lưu lại';\r\n        };\r\n\r\n        return () => {\r\n            window.onbeforeunload = () => {};\r\n        };\r\n    }, []);\r\n\r\n    if (!file.procedure && !fileData) {\r\n        history.goBack();\r\n        return <div></div>;\r\n    }\r\n    // const filestep = file.step;\r\n\r\n    const handleBackStep = () => {\r\n        if (file.step > 0) {\r\n            dispatch(setStep(file.step - 1));\r\n            smoothScroll();\r\n        }\r\n    };\r\n\r\n    const handleNextStep = () => {\r\n        smoothScroll();\r\n        dispatch(setStep(file.step + 1));\r\n    };\r\n\r\n    const handleChooseOption = (option) => {\r\n        dispatch(setOption(option));\r\n        handleNextStep();\r\n    };\r\n\r\n    const handleFileUser = (user) => {\r\n        dispatch(setUser(user));\r\n        handleNextStep();\r\n    };\r\n\r\n    const handleFileFill = (data) => {\r\n        setFileData(data);\r\n        handleNextStep();\r\n    };\r\n\r\n    const confirmFileSubmit = async (data) => {\r\n        // const formData = ConvertFormFile(data);\r\n        dispatch(loading(true));\r\n        try {\r\n            data.file.file_create_day = new Date();\r\n            const res = await FilesApi.fileSubmit(data);\r\n            if (res.success) {\r\n                SweetAlert.success(res.message);\r\n                setFileResult(res.data);\r\n                dispatch(clearFile());\r\n                smoothScroll();\r\n            } else {\r\n                SweetAlert.error(res.message);\r\n            }\r\n        } catch (error) {\r\n            SweetAlert.error(error.message);\r\n        }\r\n        dispatch(loading(false));\r\n    };\r\n\r\n    const handleFileSubmit = (data) => {\r\n        SweetAlert.confirm(\r\n            'Bạn có chắc chắn muốn nộp hồ sơ này?',\r\n            async () => {\r\n                handleNextStep();\r\n                await confirmFileSubmit(data);\r\n            },\r\n            'question',\r\n            'Xác nhận'\r\n        );\r\n    };\r\n\r\n    const fileStep = () => {\r\n        switch (file.step) {\r\n            case 0:\r\n                return <FileChooseOption onSubmit={handleChooseOption} />;\r\n            case 1:\r\n                return <FileUser onSubmit={handleFileUser} onBackStep={handleBackStep} />;\r\n            case 2:\r\n                return <FileFill onSubmit={handleFileFill} onBackStep={handleBackStep} />;\r\n            case 3:\r\n                return <FilePreview file={{ ...file, file: fileData }} onSubmit={handleFileSubmit} onBackStep={handleBackStep} />;\r\n            case 4:\r\n                return <FileResult file={fileResult} />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">NỘP HỒ SƠ</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"box-steps\">\r\n                                <div className=\"box-body\">\r\n                                    {FILE_STEPS.map((e, i) => (\r\n                                        <div key={i} className={`item ${i <= file.step ? 'active' : ''}`}>\r\n                                            <div className=\"icon\">\r\n                                                <i className={e.icon}></i>\r\n                                            </div>\r\n                                            <div className=\"text\">\r\n                                                <div className=\"number\">{i + 1}</div> {e.title}\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {fileStep()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default File;\r\n","import React from 'react';\r\n\r\nFileAttachs.propTypes = {};\r\n\r\nfunction FileAttachs(props) {\r\n    const { loading, files } = props;\r\n\r\n    return (\r\n        <div className=\"col-md-12 mb-3 mb-xl-0\">\r\n            <div className=\"panel panel-info\">\r\n                <div className=\"panel-heading\">\r\n                    <h4 className=\"mb-0\">Tệp đính kèm</h4>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    {loading && <div className=\"sp sp-page sp-circle\"></div>}\r\n                    {!loading && (\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                {files.map((file, i) => (\r\n                                    <tr key={i}>\r\n                                        <td style={{ width: '70%' }}>{file.title}</td>\r\n                                        <td>\r\n                                            <a\r\n                                                href={`${process.env.REACT_APP_ROOT_STORAGE}${file.path}`}\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-sm btn-success\"\r\n                                                target=\"_blank\"\r\n                                                rel=\"noreferrer\"\r\n                                            >\r\n                                                <i className=\"fa fa-download\"></i>\r\n                                            </a>\r\n\r\n                                            {(file.path.endsWith('.doc') || file.path.endsWith('.docx')) && (\r\n                                                <>\r\n                                                    <a\r\n                                                        href={`https://docs.google.com/gview?url=${process.env.REACT_APP_ROOT_STORAGE}${file.path}&embedded=true`}\r\n                                                        role=\"button\"\r\n                                                        className=\"btn btn-sm btn-icon btn-info ml-3\"\r\n                                                        target=\"_blank\"\r\n                                                        rel=\"noreferrer\"\r\n                                                    >\r\n                                                        <i className=\"fa fa-eye\"></i>\r\n                                                    </a>\r\n                                                </>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileAttachs;\r\n","import React, { useState } from 'react';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\n\r\nFileCheckPermission.propTypes = {};\r\n\r\nfunction FileCheckPermission(props) {\r\n    const { onSubmit } = props;\r\n\r\n    const [key, setKey] = useState();\r\n    const [captcha, setCaptcha] = useState();\r\n\r\n    const disabledSubmit = !key || !captcha;\r\n\r\n    const handleChangeKey = (e) => {\r\n        setKey(e.target.value);\r\n    };\r\n\r\n    const handleChangeCaptcha = (data) => {\r\n        setCaptcha(data);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        onSubmit(key);\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-6 mb-3 mb-xl-0\">\r\n            <div className=\"panel panel-primary\">\r\n                <div className=\"panel-heading\">\r\n                    <h4 className=\"mb-0\">Nhập mã truy cập</h4>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 form-group\">\r\n                            <p className=\"text-danger\">- Mã truy cập được cung cấp khi công dân nộp hồ sơ thành công.</p>\r\n                            <input type=\"text\" className=\"form-control\" onChange={handleChangeKey} />\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <ReCAPTCHA sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY} onChange={handleChangeCaptcha} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"panel-footer text-right\">\r\n                    <button className=\"btn btn-sm btn-success\" onClick={handleSubmit} disabled={disabledSubmit}>\r\n                        <i className=\"fa fa-unlock-alt\"></i>&nbsp;&nbsp;TRUY CẬP\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileCheckPermission;\r\n","import { FILE_STATUS, FILE_STATUS_CLASS_NAME } from 'constants/file';\r\nimport { ConvertDate } from 'helpers/ConvertDate';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nFileInfo.propTypes = {};\r\n\r\nfunction FileInfo(props) {\r\n    const { loading, file } = props;\r\n\r\n    let finished_day = moment(file?.cast.accepted_at).add(file?.processing_time, 'h');\r\n\r\n    return (\r\n        <div className=\"col-md-6 mb-3 mb-xl-0\">\r\n            <div className=\"panel panel-info\">\r\n                <div className=\"panel-heading\">\r\n                    <h4 className=\"mb-0\">Thông tin hồ sơ</h4>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    {loading && <div className=\"sp sp-page sp-circle\"></div>}\r\n                    {!loading && (\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th style={{ width: '20%' }}>Mã hồ sơ</th>\r\n                                    <td>{file.key}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Thuộc thủ tục</th>\r\n                                    <td>\r\n                                        {file.procedure.name}\r\n                                        <Link className=\"btn btn-sm btn-primary pull-right\" to={`/chi-tiet-thu-tuc/${file.procedure.key}`}>\r\n                                            Xem thủ tục\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Trạng thái</th>\r\n                                    <td>\r\n                                        <div className={`badge badge-pill badge-${FILE_STATUS_CLASS_NAME[file.status]}`}>\r\n                                            {FILE_STATUS[file.status]}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Thời gian xử lý</th>\r\n                                    <td>{ConvertDate(file.processing_time)}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Ngày nộp</th>\r\n                                    <td>{file.cast.created_at.format('hh:mm:ss DD-MM-YYYY')}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Ngày tiếp nhận</th>\r\n                                    <td>{file.status > 0 ? file.cast.accepted_at.format('hh:mm:ss DD-MM-YYYY') : `Chưa tiếp nhận`}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Ngày trả dự kiến</th>\r\n                                    <td>{file.status > 0 ? finished_day.format('hh:mm:ss DD-MM-YYYY') : `Chưa tiếp nhận`}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Ngày trả</th>\r\n                                    <td>{file.status > 1 ? file.cast.finished_at.format('hh:mm:ss DD-MM-YYYY') : `Chưa hoàn thành`}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileInfo;\r\n","import { castTimestamps } from 'helpers/CastObject';\r\nimport React from 'react';\r\n\r\nFileProcessing.propTypes = {};\r\n\r\nfunction FileProcessing(props) {\r\n    const { loading, steps } = props;\r\n\r\n    return (\r\n        <div className=\"col-md-6 mb-3 mb-xl-0\">\r\n            <div className=\"panel panel-info\">\r\n                <div className=\"panel-heading\">\r\n                    <h4 className=\"mb-0\">Quy trình xử lý</h4>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    {loading && <div className=\"sp sp-page sp-circle\"></div>}\r\n                    {!loading && (\r\n                        <div className=\"box\">\r\n                            <ul id=\"first-list\">\r\n                                {steps.map((step, i) => {\r\n                                    step = castTimestamps(step);\r\n\r\n                                    return (\r\n                                        <li key={i}>\r\n                                            <span></span>\r\n                                            <div className=\"title\">\r\n                                                {step.step.name} #{i + 1}\r\n                                            </div>\r\n                                            <div className=\"info\">{step.note}</div>\r\n                                            <div className=\"name\">- {step.user.full_name} -</div>\r\n                                            <div className=\"time\">\r\n                                                <span>{step.cast.created_at.format('DD-MM-YY')}</span>\r\n                                                <span>{step.cast.created_at.format('hh:mm A')}</span>\r\n                                            </div>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileProcessing;\r\n","import moment from 'moment';\r\nimport React from 'react';\r\n\r\nUserInfo.propTypes = {};\r\n\r\nfunction UserInfo(props) {\r\n    const { loading, user_info } = props;\r\n\r\n    return (\r\n        <div className=\"col-md-12 mb-3 mb-xl-0\">\r\n            <div className=\"panel panel-info\">\r\n                <div className=\"panel-heading\">\r\n                    <h4 className=\"mb-0\">Thông tin cá nhân, tổ chức</h4>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    {loading && <div className=\"sp sp-page sp-circle\"></div>}\r\n                    {!loading && (\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th style={{ width: '20%' }}>Người nộp</th>\r\n                                    <td>{user_info.full_name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Số điện thoại</th>\r\n                                    <td>{user_info.phone_number}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Email</th>\r\n                                    <td>{user_info.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Cơ quan</th>\r\n                                    <td>{user_info.organization}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Số CMND</th>\r\n                                    <td>{user_info.identity_card}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Ngày cấp</th>\r\n                                    <td>{moment(user_info.identity_card_date).format('DD-MM-YYYY')}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Nơi cấp</th>\r\n                                    <td>{user_info.identity_card_address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Fax</th>\r\n                                    <td>{user_info.fax}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Website</th>\r\n                                    <td>{user_info.website}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Địa chỉ</th>\r\n                                    <td>{user_info.address}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInfo;\r\n","import FilesApi from 'api/FilesApi';\r\nimport { loading } from 'components/common/Loading/loadingSlice';\r\nimport { castTimestamps } from 'helpers/CastObject';\r\nimport SweetAlert from 'lib/SweetAlert';\r\nimport Toastr from 'lib/Toastr';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport FileAttachs from './FileAttachs';\r\nimport FileCheckPermission from './FileCheckPermission';\r\nimport FileInfo from './FileInfo';\r\nimport FileProcessing from './FileProcessing';\r\nimport FileTemplate from './FileTemplate';\r\nimport UserInfo from './UserInfo';\r\nimport history from 'app/History';\r\n\r\nFileDetail.propTypes = {};\r\n\r\nfunction FileDetail(props) {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const [accessKey, setAccessKey] = useState();\r\n    const [checkPermission, setCheckPermission] = useState(false);\r\n    const [file, setFile] = useState();\r\n    const [fileSteps, setFileSteps] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getFileDetail();\r\n        getFileSteps();\r\n    }, [id, accessKey]);\r\n\r\n    const getFileDetail = async () => {\r\n        try {\r\n            const { data } = await FilesApi.getById(id, accessKey);\r\n\r\n            setFile(castTimestamps(data));\r\n        } catch (error) {\r\n            setCheckPermission(true);\r\n            Toastr.error('Bạn không có quyền truy cập hồ sơ này');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const getFileSteps = async () => {\r\n        try {\r\n            const { data } = await FilesApi.getFileSteps(id);\r\n            setFileSteps(data);\r\n        } catch (error) {\r\n            Toastr.error('Lỗi load quy trình hồ sơ');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        SweetAlert.confirm(`Bạn có chắc muốn hủy hồ sơ này?<br>Thao tác không thể hoàn tác`, async () => {\r\n            dispatch(loading(true));\r\n            try {\r\n                const res = await FilesApi.cancel(id);\r\n                if (res.success) {\r\n                    Toastr.success(res.message);\r\n                    history.goBack();\r\n                    // getFileDetail();\r\n                }\r\n            } catch (error) {\r\n                SweetAlert.error(error.message);\r\n            }\r\n            dispatch(loading(false));\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (data) => {\r\n        setCheckPermission(false);\r\n        setAccessKey(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">CHI TIẾT HỒ SƠ</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        {checkPermission && <FileCheckPermission onSubmit={handleSubmit} />}\r\n                        {!checkPermission && (\r\n                            <>\r\n                                <FileInfo loading={!file} file={file} />\r\n                                <FileProcessing loading={!file} steps={fileSteps} />\r\n                                <UserInfo loading={!file} user_info={file?.user_info} />\r\n                                <FileAttachs loading={!file} files={file?.files} />\r\n                                {/* \r\n                                <FileTemplate loading={!file} data={file?.data} onDelete={handleDelete} disabledCancel={handleDelete} /> */}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"panel-footer text-right\">\r\n                            <button className=\"btn btn-sm btn-danger\" onClick={handleDelete} disabled={file?.status != 0}>\r\n                                <i className=\"fa fa-close\"></i>&nbsp;&nbsp;HỦY HỒ SƠ\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileDetail;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nPagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    perPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction Pagination(props) {\r\n    const { totalRecords, perPage, onPageChange } = props;\r\n    const pageCount = Math.ceil(totalRecords / perPage);\r\n\r\n    return (\r\n        <ReactPaginate\r\n            previousLabel=\"‹\"\r\n            nextLabel=\"›\"\r\n            previousClassName={'page-item'}\r\n            previousLinkClassName={'page-link'}\r\n            nextClassName={'page-item'}\r\n            nextLinkClassName={'page-link'}\r\n            breakLabel={'...'}\r\n            pageClassName={'page-item'}\r\n            pageLinkClassName={'page-link'}\r\n            breakClassName={'page-item'}\r\n            breakLinkClassName={'page-link'}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={({ selected }) => onPageChange(selected + 1)}\r\n            containerClassName={'pagination'}\r\n            activeClassName={'active'}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","import { useSelector } from 'react-redux';\r\n\r\nexport const Menu = () => {\r\n    const loggedInUser = useSelector((state) => state.user.current);\r\n    const isLoggedIn = !!loggedInUser.id;\r\n\r\n    let menu = [\r\n        {\r\n            label: 'Trang chủ',\r\n            icon: 'fa fa-home',\r\n            class: '',\r\n            to: '/',\r\n        },\r\n    ];\r\n\r\n    if (isLoggedIn) {\r\n        menu.push(\r\n            {\r\n                label: 'TT. Cá nhân',\r\n                icon: 'fa fa-user-circle-o',\r\n                class: 'hidden-xs',\r\n                to: '/ca-nhan',\r\n            },\r\n            {\r\n                label: 'QL. Hồ sơ',\r\n                icon: 'fa fa-vcard',\r\n                class: 'hidden-xs',\r\n                to: '/quan-ly-ho-so',\r\n            }\r\n        );\r\n    } else {\r\n        menu.push(\r\n            {\r\n                label: 'Đăng nhập',\r\n                icon: 'fa fa-sign-in',\r\n                class: 'hidden-xs',\r\n                to: '/dang-nhap',\r\n            },\r\n            {\r\n                label: 'Đăng ký',\r\n                icon: 'fa fa-user-plus',\r\n                class: 'hidden-xs',\r\n                to: '/dang-ky',\r\n            }\r\n        );\r\n    }\r\n\r\n    // menu.push({\r\n    //     label: 'Bộ thủ tục',\r\n    //     icon: 'fa fa-book',\r\n    //     class: 'hidden-xs',\r\n    //     to: '/bo-thu-tuc',\r\n    // });\r\n\r\n    menu.push({\r\n        label: 'Tra cứu hồ sơ',\r\n        icon: '\tfa fa-search',\r\n        class: 'hidden-xs',\r\n        to: '/tra-cuu-ho-so',\r\n    });\r\n\r\n    return menu;\r\n};\r\n\r\nexport const UserMenu = () => {\r\n    const loggedInUser = useSelector((state) => state.user.current);\r\n    const isLoggedIn = !!loggedInUser.id;\r\n\r\n    let menu = [];\r\n\r\n    if (isLoggedIn) {\r\n        menu.push(\r\n            {\r\n                label: loggedInUser.full_name,\r\n                icon: 'fa fa-user',\r\n                class: '',\r\n                to: '/ca-nhan',\r\n            },\r\n            {\r\n                label: 'Đăng xuất',\r\n                icon: 'fa fa-sign-out',\r\n                class: '',\r\n                to: '/dang-xuat',\r\n            }\r\n        );\r\n    } else {\r\n        menu.push(\r\n            {\r\n                label: 'Đăng nhập',\r\n                icon: 'fa fa-sign-in',\r\n                class: '',\r\n                to: '/dang-nhap',\r\n            },\r\n            {\r\n                label: 'Đăng ký',\r\n                icon: 'fa fa-user-plus',\r\n                class: '',\r\n                to: '/dang-ky',\r\n            }\r\n        );\r\n    }\r\n\r\n    return menu;\r\n};\r\n\r\nexport const LeftMenu = () => {\r\n    let menu = [\r\n        {\r\n            label: 'Thông tin cá nhân',\r\n            icon: 'fa fa-user-circle-o',\r\n            class: '',\r\n            to: '/ca-nhan',\r\n        },\r\n        {\r\n            label: 'QL. Hồ sơ đã nộp',\r\n            icon: 'fa fa-vcard',\r\n            class: '',\r\n            to: '/quan-ly-ho-so',\r\n        },\r\n    ];\r\n\r\n    return menu;\r\n};\r\n","import { LeftMenu } from 'app/Menu';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nMenu.propTypes = {};\r\n\r\nfunction Menu(props) {\r\n    return (\r\n        <div className=\"list-group\">\r\n            {LeftMenu().map((m, i) => (\r\n                <NavLink key={i} to={m.to} className={`list-group-item ${m.class}`} exact>\r\n                    <i className={m.icon}></i>\r\n                    &nbsp;&nbsp; {m.label}\r\n                    <i className=\"fa fa-chevron-right list-group-chevron\"></i>\r\n                </NavLink>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import FilesApi from 'api/FilesApi';\r\nimport Pagination from 'components/common/@extensions/Pagination';\r\nimport Menu from 'components/common/Menu/Index';\r\nimport { FILE_STATUS, FILE_STATUS_CLASS_NAME } from 'constants/file';\r\nimport { castTimestamps } from 'helpers/CastObject';\r\nimport { smoothScroll } from 'helpers/SmoothScroll';\r\nimport Toastr from 'lib/Toastr';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nFileManage.propTypes = {};\r\n\r\nfunction FileManage(props) {\r\n    const [page, setPage] = useState(1);\r\n    const [perPage, setPerPage] = useState(10);\r\n    const [search, setSearch] = useState('');\r\n    const [totalRecords, setTotalRecords] = useState(10);\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const user = useSelector((state) => state.user.current);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [page, perPage, search]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            smoothScroll();\r\n            // console.log('ff', { page, perPage, q: search });\r\n            const { data, total } = await FilesApi.getFiles({ page, perPage, id_user: user.id });\r\n            setTotalRecords(total);\r\n            setData(data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            Toastr.error('Lỗi tải dữ liệu hồ sơ');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setPage(page);\r\n    };\r\n\r\n    const handlePerPageChange = (value) => {\r\n        setPerPage(value);\r\n    };\r\n\r\n    const handleSearch = (data) => {\r\n        setSearch(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">QUẢN LÝ HỒ SƠ CÁ NHÂN</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <Menu />\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            {loading && <div className=\"sp sp-page sp-circle\"></div>}\r\n\r\n                            {!loading && (\r\n                                <div className=\"table-responsive\">\r\n                                    <p>\r\n                                        Tìm thấy <span className=\"text-danger\">{totalRecords}</span> kết quả\r\n                                    </p>\r\n                                    <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                                        <thead>\r\n                                            <tr role=\"row\" className=\"bg-primary\">\r\n                                                <th>STT</th>\r\n                                                <th>Mã H.S</th>\r\n                                                <th>Thủ tục</th>\r\n                                                <th>Trạng thái</th>\r\n                                                <th>Ngày nộp</th>\r\n                                                <th>Lựa chọn</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {data.map((item, index) => {\r\n                                                item = castTimestamps(item);\r\n                                                return (\r\n                                                    <tr key={item.id}>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{item.key}</td>\r\n                                                        <td>{item.procedure.name}</td>\r\n                                                        <td>\r\n                                                            <span className={`label label-${FILE_STATUS_CLASS_NAME[item.status]}`}>\r\n                                                                {FILE_STATUS[item.status]}\r\n                                                            </span>\r\n                                                        </td>\r\n                                                        <td>{item.cast.created_at.format('hh:mm:ss DD-MM-YYYY')}</td>\r\n                                                        <td>\r\n                                                            <Link to={`/chi-tiet-ho-so/${item.id}`} className=\"btn btn-sm btn-success\">\r\n                                                                Xem\r\n                                                            </Link>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                );\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"text-center\">\r\n                                <Pagination totalRecords={totalRecords} perPage={perPage} onPageChange={handlePageChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileManage;\r\n","import FilesApi from 'api/FilesApi';\r\nimport Pagination from 'components/common/@extensions/Pagination';\r\nimport { FILE_STATUS, FILE_STATUS_CLASS_NAME } from 'constants/file';\r\nimport { castTimestamps } from 'helpers/CastObject';\r\nimport { smoothScroll } from 'helpers/SmoothScroll';\r\nimport Toastr from 'lib/Toastr';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport history from 'app/History';\r\n\r\nFileSearch.propTypes = {};\r\n\r\nfunction FileSearch(props) {\r\n    const location = useLocation();\r\n    const [totalRecords, setTotalRecords] = useState(10);\r\n    const [data, setData] = useState([]);\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const queryParams = useMemo(() => {\r\n        const params = queryString.parse(location.search);\r\n\r\n        return {\r\n            page: 1,\r\n            perPage: 10,\r\n            ...params,\r\n        };\r\n    }, [location.search]);\r\n\r\n    // const setFilters = (value) => {\r\n    //     const filters = {\r\n    //         ...queryParams,\r\n    //         ...value,\r\n    //     };\r\n\r\n    //     history.push({\r\n    //         pathname: history.location.pathname,\r\n    //         search: queryString.stringify(filters),\r\n    //     });\r\n    // };\r\n\r\n    const form = useForm({\r\n        defaultValues: {\r\n            key: '',\r\n            indentity_card: '',\r\n        },\r\n    });\r\n\r\n    const { register } = form;\r\n\r\n    // useEffect(() => {\r\n    //     fetchData();\r\n    // }, [queryParams]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            smoothScroll();\r\n            const { data, total } = await FilesApi.getAll(queryParams);\r\n            setTotalRecords(total);\r\n            setData(data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            Toastr.error('Lỗi tải dữ liệu hồ sơ');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        // setFilters({ page });\r\n    };\r\n\r\n    const handleSubmit = async (search) => {\r\n        // setFilters(data);\r\n        console.log(search);\r\n        const { data, total } = await FilesApi.getAll({ page: 1, perPage: 10, key: search.key, identity_card: search.identity_card });\r\n        setData(data);\r\n        console.log('d', data);\r\n        setIsShow(true);\r\n        setTotalRecords(total);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">TRA CỨU HỒ SƠ</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"panel panel-info\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h4 className=\"mb-0\">Tra cứu thông tin</h4>\r\n                                </div>\r\n                                <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n                                    <div className=\"panel-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <label>Mã hồ sơ</label>\r\n                                                <input {...register('key')} type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                            {/* <div className=\"col-md-4 form-group\">\r\n                                                <label>Tên người nộp</label>\r\n                                                <input {...register('full_name')} type=\"text\" className=\"form-control\" />\r\n                                            </div> */}\r\n                                            <div className=\"col-md-6 form-group\">\r\n                                                <label>Số CMND/CCCD người nộp</label>\r\n                                                <input {...register('identity_card')} type=\"text\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"panel-footer text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\">\r\n                                            <i className=\"fa fa-search\"></i>&nbsp;&nbsp;Tra cứu\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            {loading && <div className=\"sp sp-page sp-circle\"></div>}\r\n\r\n                            {isShow && !loading && (\r\n                                <>\r\n                                    <div className=\"table-responsive\">\r\n                                        <p>\r\n                                            Tìm thấy <span className=\"text-danger\">{totalRecords}</span> kết quả\r\n                                        </p>\r\n                                        <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                                            <thead>\r\n                                                <tr role=\"row\" className=\"bg-primary\">\r\n                                                    <th>STT</th>\r\n                                                    <th style={{ width: '10%' }}>Mã H.S</th>\r\n                                                    <th>Thủ tục</th>\r\n                                                    <th>Người nộp</th>\r\n                                                    <th>Trạng thái</th>\r\n                                                    <th>Ngày nộp</th>\r\n                                                    <th>Lựa chọn</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {data.map((item, index) => {\r\n                                                    item = castTimestamps(item);\r\n                                                    return (\r\n                                                        <tr key={item.id}>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{item.key}</td>\r\n                                                            <td>{item.procedure.name}</td>\r\n                                                            <td>{item.user.full_name}</td>\r\n                                                            <td>\r\n                                                                <span className={`label label-${FILE_STATUS_CLASS_NAME[item.status]}`}>\r\n                                                                    {FILE_STATUS[item.status]}\r\n                                                                </span>\r\n                                                            </td>\r\n                                                            <td>{item.cast.created_at.format('hh:mm:ss DD-MM-YYYY')}</td>\r\n                                                            <td>\r\n                                                                <Link to={`/chi-tiet-ho-so/${item.id}`} className=\"btn btn-sm btn-success\">\r\n                                                                    Xem\r\n                                                                </Link>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <Pagination\r\n                                            totalRecords={totalRecords}\r\n                                            perPage={Number.parseInt(queryParams.perPage)}\r\n                                            onPageChange={handlePageChange}\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileSearch;\r\n","import HttpClient from './HttpClient';\r\n\r\nconst FieldsApi = {\r\n    getAll(params) {\r\n        console.log(params);\r\n        return HttpClient.get(`fields/get`, { params });\r\n    },\r\n\r\n    getById(id) {\r\n        return HttpClient.get(`fields/get/${id}`);\r\n    },\r\n};\r\n\r\nexport default FieldsApi;\r\n","import HttpClient from './HttpClient';\r\n\r\nconst OrganizationsApi = {\r\n    getAll(params) {\r\n        return HttpClient.get(`organizations/get`, { params });\r\n    },\r\n\r\n    getGroupFields() {\r\n        return HttpClient.get(`organizations/get-group-fields`);\r\n    },\r\n\r\n    getById(id) {\r\n        return HttpClient.get(`organizations/get/${id}`);\r\n    },\r\n};\r\n\r\nexport default OrganizationsApi;\r\n","import HttpClient from './HttpClient';\r\n\r\nconst ProceduresApi = {\r\n    getAll(params) {\r\n        return HttpClient.get(`procedures/get`, { params });\r\n    },\r\n\r\n    getById(id) {\r\n        return HttpClient.get(`procedures/get/${id}`);\r\n    },\r\n\r\n    getByKey(id) {\r\n        return HttpClient.get(`procedures/get-by-key/${id}`);\r\n    },\r\n};\r\n\r\nexport default ProceduresApi;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tree from 'react-animated-tree';\r\nimport './TreeView.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nTreeView.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    title: PropTypes.string,\r\n};\r\n\r\nconst treeStyles = {\r\n    position: 'none',\r\n    top: 40,\r\n    left: 40,\r\n    width: '100%',\r\n};\r\n\r\nfunction TreeView(props) {\r\n    const { data, title } = props;\r\n\r\n    return (\r\n        <Tree content={title} canHide open style={treeStyles}>\r\n            {data.map((e) => (\r\n                <Tree\r\n                    key={e.id}\r\n                    content={\r\n                        // <Link to={e.url}>\r\n                        <Link onClick={e.action}>\r\n                            {e.title} ({e.count})\r\n                        </Link>\r\n\r\n                        // </Link>\r\n                    }\r\n                    canHide\r\n                >\r\n                    {e.childrens.map((child) => (\r\n                        <Tree\r\n                            key={child.id}\r\n                            content={\r\n                                <Link onClick={child.action}>\r\n                                    {child.title} ({child.count})\r\n                                </Link>\r\n                            }\r\n                        />\r\n                    ))}\r\n                </Tree>\r\n            ))}\r\n        </Tree>\r\n    );\r\n}\r\n\r\nexport default TreeView;\r\n","import OrganizationsApi from 'api/OrganizationsApi';\r\nimport React, { useEffect, useState } from 'react';\r\nimport TreeView from '../@extensions/TreeView';\r\n\r\nOrganizationsMenu.propTypes = {};\r\n\r\nfunction OrganizationsMenu(props) {\r\n    const [groupFields, setGroupFields] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const { setOrganizationId, setFieldId } = props;\r\n\r\n    useEffect(() => {\r\n        getAllGroupFields();\r\n    }, []);\r\n    const handleChangeOrganization = (id) => {\r\n        setOrganizationId(Number.parseInt(id));\r\n    };\r\n    const handleChangeField = (organId, fieldId) => {\r\n        setOrganizationId(organId);\r\n        setFieldId(Number.parseInt(fieldId));\r\n    };\r\n\r\n    const getAllGroupFields = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const { data } = await OrganizationsApi.getGroupFields();\r\n\r\n            let dt = data.map((organ) => {\r\n                return {\r\n                    id: organ.key,\r\n                    title: organ.name,\r\n                    count: organ.fields.reduce((c, v) => {\r\n                        return c + v.count_procedures;\r\n                    }, 0),\r\n                    // url: `?organization=${organ.id}`,\r\n                    action: () => handleChangeOrganization(organ.id),\r\n                    childrens: organ.fields.map((field) => {\r\n                        return {\r\n                            id: field.key,\r\n                            title: field.name,\r\n                            count: field.count_procedures,\r\n                            url: `?organization=${organ.key}&field=${field.key}`,\r\n                            action: () => handleChangeField(organ.id, field.id),\r\n                        };\r\n                    }),\r\n                };\r\n            });\r\n\r\n            setGroupFields(dt);\r\n            setLoading(false);\r\n        } catch (error) {}\r\n    };\r\n\r\n    return (\r\n        <div className=\"panel panel-default panel-primary\">\r\n            <div className=\"panel-heading text-center\">\r\n                <h4>CƠ QUAN THỰC HIỆN</h4>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                {loading && <div className=\"sp sp-page sp-circle\"></div>}\r\n                {!loading && <TreeView data={groupFields} title=\"Cơ quan thực hiện\" />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrganizationsMenu;\r\n","import FieldsApi from 'api/FieldsApi';\r\nimport OrganizationsApi from 'api/OrganizationsApi';\r\nimport ProceduresApi from 'api/ProceduresApi';\r\nimport Pagination from 'components/common/@extensions/Pagination';\r\nimport OrganizationsMenu from 'components/common/OranizationsMenu/Index';\r\nimport Toastr from 'lib/Toastr';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nProcedure.propTypes = {};\r\n\r\nconst PROCEDURE_LEVELS = [\r\n    { label: 'Mức độ 1', value: 1 },\r\n    { label: 'Mức độ 2', value: 2 },\r\n    { label: 'Mức độ 3', value: 3 },\r\n    { label: 'Mức độ 4', value: 4 },\r\n];\r\n\r\nfunction Procedure(props) {\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [data, setData] = useState([]);\r\n    const [procedures, setProcedures] = useState([]);\r\n    const [dataOrganizations, setDataOrganizations] = useState([]);\r\n    const [organizationId, setOrganizationId] = useState();\r\n    const [fieldId, setFieldId] = useState();\r\n    const [level, setLevel] = useState(0);\r\n    const [dataFields, setDataFields] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const typingTimeout = useRef(null);\r\n\r\n    const queryParams = {\r\n        page: 1,\r\n        perPage: 10,\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        getAllOragnizations();\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const { data, total } = await ProceduresApi.getAll(queryParams);\r\n            setTotalRecords(total);\r\n            setProcedures(data);\r\n            setData(data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            Toastr.error('Lỗi tải dữ liệu thủ tục');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const getAllOragnizations = async () => {\r\n        try {\r\n            const { data } = await OrganizationsApi.getAll();\r\n            setDataOrganizations(data);\r\n        } catch (error) {\r\n            Toastr.error('Lỗi tải dữ liệu cơ quan');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const getAllFields = async (organization) => {\r\n        try {\r\n            setLoading(true);\r\n            const procedures = await ProceduresApi.getAll({ ...queryParams, organization: organization.organization });\r\n            setTotalRecords(procedures.total);\r\n            setData(procedures.data);\r\n            setLoading(false);\r\n            // setLevel(0);\r\n            const fields = await FieldsApi.getAll(organization);\r\n            setDataFields(fields.data);\r\n        } catch (error) {\r\n            Toastr.error('Lỗi tải dữ liệu lĩnh vực');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = async (page) => {\r\n        const queryParams = {\r\n            page: page,\r\n            perPage: 10,\r\n        };\r\n        const { data, total } = await ProceduresApi.getAll(queryParams);\r\n        setTotalRecords(total);\r\n        setData(data);\r\n    };\r\n\r\n    const handleChangeOrganization = (event) => {\r\n        setOrganizationId(Number.parseInt(event.target.value));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (organizationId) {\r\n            getAllFields({ organization: organizationId });\r\n        }\r\n    }, [organizationId]);\r\n\r\n    // const\r\n\r\n    // useEffect(() => {\r\n    // // if (fieldId) {\r\n    //     let pros = await ProceduresApi.getAll({\r\n    //         page: 1,\r\n    //         perPage: 100,\r\n    //     }\r\n    // );\r\n    //     console.log('ff', procedures.length);\r\n\r\n    //     const dataField = pros.filter((procedure) => {\r\n    //         if (procedure.id_field === fieldId) return procedure;\r\n    //     });\r\n    //     console.log('jjj', dataField.length);\r\n    //     setTotalRecords(dataField.length);\r\n    // setLevel(0);\r\n    // setData(dataField);\r\n    // }\r\n    // }, [fieldId]);\r\n\r\n    const handleChangeField = async (event) => {\r\n        const fieldId = Number.parseInt(event.target.value);\r\n        if (fieldId) {\r\n            const pros = await ProceduresApi.getAll({ page: 1, perPage: 100 });\r\n\r\n            const dataField = pros.data.filter((procedure) => {\r\n                if (procedure.id_field === fieldId) return procedure;\r\n            });\r\n            setTotalRecords(dataField.length);\r\n            setData(dataField);\r\n        } else {\r\n            const { data } = await ProceduresApi.getAll({ page: 1, perPage: 100, organization: organizationId });\r\n            setTotalRecords(data.length);\r\n            setData(data);\r\n        }\r\n    };\r\n\r\n    // const handleChangeLevel = (event) => {\r\n    //     setLevel(Number.parseInt(event.target.value));\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     const data = procedures.filter((procedure) => {\r\n    //         if (procedure.id_field === fieldId) return procedure;\r\n    //     });\r\n    //     const dataField = data.filter((procedure) => {\r\n    //         if (level === 0) return procedure;\r\n    //         if (procedure.level === level) return procedure;\r\n    //     });\r\n    //     setTotalRecords(dataField.length);\r\n    //     setData(dataField);\r\n    // }, [level]);\r\n\r\n    const searchProcedures = async (searchText) => {\r\n        const procedures = await ProceduresApi.getAll({ ...queryParams, organization: organizationId, search: searchText });\r\n        setTotalRecords(procedures.total);\r\n        setData(procedures.data);\r\n    };\r\n\r\n    const handleChangeSearch = (event) => {\r\n        if (typingTimeout.current) {\r\n            clearTimeout(typingTimeout.current);\r\n        }\r\n        typingTimeout.current = setTimeout(() => {\r\n            searchProcedures(event.target.value);\r\n        }, 500);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">DANH SÁCH THỦ TỤC</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <OrganizationsMenu setOrganizationId={setOrganizationId} setFieldId={setFieldId} setLevel={setLevel} />\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"panel panel-info\">\r\n                                <div className=\"panel-heading\">Tìm kiếm</div>\r\n                                <div className=\"panel-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">Từ khóa</div>\r\n                                        <div className=\"col-md-9 form-group\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Nhập mã thủ tục hoặc tên thủ tục\"\r\n                                                onChange={handleChangeSearch}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">Cơ quan</div>\r\n                                        <div className=\"col-md-9 form-group\">\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                onChange={handleChangeOrganization}\r\n                                                value={organizationId}\r\n                                                disabled={!dataOrganizations.length}\r\n                                            >\r\n                                                <option value={0}>-- Chọn cơ quan --</option>\r\n                                                {dataOrganizations.map((e, i) => (\r\n                                                    <option key={e.id} value={e.id}>\r\n                                                        {e.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">Lĩnh vực</div>\r\n                                        <div className=\"col-md-9 form-group\">\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                onChange={handleChangeField}\r\n                                                value={fieldId}\r\n                                                disabled={!dataFields.length}\r\n                                            >\r\n                                                <option value={0}>-- Chọn lĩnh vực --</option>\r\n                                                {dataFields.map((e, i) => (\r\n                                                    <option key={e.id} value={e.id}>\r\n                                                        {e.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        {/* <div className=\"col-md-3\">Mức độ</div>\r\n                                        <div className=\"col-md-9 form-group\">\r\n                                            <select className=\"form-control\" onChange={handleChangeLevel} value={level}>\r\n                                                <option value={0}>-- Chọn mức độ --</option>\r\n                                                {PROCEDURE_LEVELS.map((e, i) => (\r\n                                                    <option key={e.value} value={e.value}>\r\n                                                        {e.label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {loading && <div className=\"sp sp-page sp-circle\"></div>}\r\n\r\n                            {!loading && (\r\n                                <div className=\"table-responsive\">\r\n                                    <p>\r\n                                        Tìm thấy <span className=\"text-danger\">{totalRecords}</span> kết quả\r\n                                    </p>\r\n                                    <table className=\"table table-striped table-bordered table-hover text-center\">\r\n                                        <thead>\r\n                                            <tr role=\"row\" className=\"bg-primary\">\r\n                                                <th>STT</th>\r\n                                                <th>Mã TT</th>\r\n                                                <th>Tên thủ tục</th>\r\n                                                <th>Lĩnh vực</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {data.map((item, index) => (\r\n                                                <tr key={item.id}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{item.key}</td>\r\n                                                    <td>\r\n                                                        <Link to={`/chi-tiet-thu-tuc/${item.key}`}>{item.name}</Link>\r\n                                                    </td>\r\n                                                    <td>{item.field.name}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"text-center\">\r\n                                <Pagination\r\n                                    totalRecords={totalRecords}\r\n                                    perPage={Number.parseInt(queryParams.perPage)}\r\n                                    onPageChange={handlePageChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Procedure;\r\n","import ProceduresApi from 'api/ProceduresApi';\r\nimport history from 'app/History';\r\nimport { loading } from 'components/common/Loading/loadingSlice';\r\nimport OrganizationsMenu from 'components/common/OranizationsMenu/Index';\r\nimport { setOption, setProcedure as setProcedureRedux, setStep } from 'components/File/fileSlice';\r\nimport Toastr from 'lib/Toastr';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nProcedureDetail.propTypes = {};\r\nfunction ProcedureDetail(props) {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const [procedure, setProcedure] = useState();\r\n    console.log(id);\r\n    useEffect(() => {\r\n        getProcedureDetail();\r\n    }, [id]);\r\n\r\n    const getProcedureDetail = async () => {\r\n        try {\r\n            const { data } = await ProceduresApi.getByKey(id);\r\n            console.log(data);\r\n            setProcedure(data);\r\n            dispatch(setProcedureRedux(data));\r\n            let option_is_choose = data && data.options.length == 1;\r\n            dispatch(setOption(option_is_choose ? data.options[0] : null));\r\n            dispatch(setStep(option_is_choose ? 1 : 0));\r\n        } catch (error) {\r\n            Toastr.error('Lỗi load chi tiết thủ tục');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">CHI TIẾT THỦ TỤC</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <OrganizationsMenu />\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            {!procedure && <div className=\"sp sp-page sp-circle\"></div>}\r\n\r\n                            {procedure && (\r\n                                <div className=\"table-responsive\">\r\n                                    <RenderFunction className=\"mb-3\" procedure={procedure} />\r\n\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th style={{ width: '18%' }}>Tên thủ tục</th>\r\n                                                <td>\r\n                                                    <b>{procedure.name}</b>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Lĩnh vực</th>\r\n                                                <td>{procedure.field.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Cơ quan thực hiện</th>\r\n                                                <td>{procedure.eligible && procedure.first_organization.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Cách thức thực hiện</th>\r\n                                                <td\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: procedure.cach_thuc_thuc_hien,\r\n                                                    }}\r\n                                                ></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Đối tượng thực hiện</th>\r\n                                                <td\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: procedure.doi_tuong_thuc_hien,\r\n                                                    }}\r\n                                                ></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Trình tự thực hiện</th>\r\n                                                <td\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: procedure.trinh_tu_thuc_hien,\r\n                                                    }}\r\n                                                ></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Thời hạn giải quyết</th>\r\n                                                <td\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: procedure.thoi_han_giai_quyet,\r\n                                                    }}\r\n                                                ></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Lệ phí</th>\r\n                                                <td\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: procedure.le_phi,\r\n                                                    }}\r\n                                                ></td>\r\n                                            </tr>\r\n                                            {/* <tr>\r\n                                                <th>Thành phần hồ sơ</th>\r\n                                                <td>\r\n                                                    <p>{procedure.thanh_phan_ho_so}</p>\r\n                                                </td>\r\n                                            </tr> */}\r\n                                            <tr>\r\n                                                <th>Số lượng bộ hồ sơ</th>\r\n                                                <td>{procedure.so_luong_ho_so} bộ</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Yêu cầu điều kiện</th>\r\n                                                <td\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: procedure.yeu_cau_dieu_kien,\r\n                                                    }}\r\n                                                ></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Căn cứ pháp lý</th>\r\n                                                <td\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: procedure.can_cu_phap_ly,\r\n                                                    }}\r\n                                                ></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Biểu mẫu đính kèm</th>\r\n                                                {/* <td>\r\n                                                    {procedure.files.map((e, i) => (\r\n                                                        <div key={i}>\r\n                                                            {e.title}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                                            <a\r\n                                                                href={`${process.env.REACT_APP_ROOT_STORAGE}${e.path}`}\r\n                                                                role=\"button\"\r\n                                                                className=\"btn btn-sm btn-success\"\r\n                                                            >\r\n                                                                <i className=\"fa fa-download\"></i> Tải về\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </td> */}\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Kết quả thực hiện</th>\r\n                                                <td\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: procedure.ket_qua_thuc_hien,\r\n                                                    }}\r\n                                                ></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <RenderFunction className=\"mt-3\" procedure={procedure} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderFunction(props) {\r\n    const { procedure, className } = props;\r\n    return (\r\n        <div className={`row ${className}`}>\r\n            <div className=\"col-md-6\">\r\n                <button type=\"button\" className=\"btn btn-default\" onClick={() => history.goBack()}>\r\n                    <i className=\"fa fa-arrow-left\"></i> Quay lại\r\n                </button>\r\n            </div>\r\n            <div className=\"col-md-6 text-right\">\r\n                {procedure.eligible && (\r\n                    <Link to={`/nop-ho-so`} role=\"button\" className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-send\"></i>&nbsp;&nbsp; Nộp hồ sơ\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProcedureDetail;\r\n","import Menu from 'components/common/Menu/Index';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { castUser } from 'helpers/CastObject';\r\n\r\nProfile.propTypes = {};\r\n\r\nfunction Profile(props) {\r\n    const user = castUser(useSelector((state) => state.user.current));\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">QUẢN LÝ THÔNG TIN TÀI KHOẢN</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <Menu />\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"panel panel-info\">\r\n                                <div className=\"panel-heading\">Thông tin cá nhân</div>\r\n                                <div className=\"panel-body\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th>Họ tên</th>\r\n                                                <td>{user.full_name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Cơ quan/Tổ chức</th>\r\n                                                <td>{user.organization}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Ngày sinh</th>\r\n                                                <td>{user.cast.date_of_birth.format('DD/MM/YYYY')}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Email</th>\r\n                                                <td>{user.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Số CMND</th>\r\n                                                <td>{user.identity_card}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Ngày cấp CMND</th>\r\n                                                <td>{user.cast.identity_card_date.format('DD/MM/YYYY')}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Nơi cấp CMND</th>\r\n                                                <td>{user.identity_card_address}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Số điện thoại</th>\r\n                                                <td>{user.phone_number}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Fax</th>\r\n                                                <td>{user.fax}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Website</th>\r\n                                                <td>\r\n                                                    <a href={`//${user.website}`} target=\"_blank\" rel=\"noreferrer\">\r\n                                                        {user.website}\r\n                                                    </a>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Địa chỉ</th>\r\n                                                <td>{user.address}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Ngày đăng kí</th>\r\n                                                <td>{user.cast.created_at.format('DD/MM/YYYY H:mm:ss')}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import Login from 'components/Auth/Login';\r\nimport Register from 'components/Auth/Register';\r\nimport File from 'components/File/Index';\r\nimport FileDetail from 'components/FileManage/FileDetail';\r\nimport FileManage from 'components/FileManage/Index';\r\nimport FileSearch from 'components/FileSearch/Index';\r\nimport Home from 'components/Home/Index';\r\nimport ProcedureDetail from 'components/Home/ProcedureDetail';\r\nimport Profile from 'components/Profile/Index';\r\nimport { GUEST_GUARD, USER_GUARD } from 'constants/guard';\r\n\r\nconst Routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        main: () => <Home />,\r\n    },\r\n    {\r\n        path: '/dang-nhap',\r\n        exact: true,\r\n        main: () => <Login />,\r\n        guard: USER_GUARD,\r\n    },\r\n    {\r\n        path: '/dang-ky',\r\n        exact: true,\r\n        main: () => <Register />,\r\n        guard: USER_GUARD,\r\n    },\r\n    {\r\n        path: '/ca-nhan',\r\n        exact: true,\r\n        main: () => <Profile />,\r\n        guard: GUEST_GUARD,\r\n    },\r\n    {\r\n        path: '/chi-tiet-thu-tuc/:id',\r\n        exact: true,\r\n        main: () => <ProcedureDetail />,\r\n    },\r\n    {\r\n        path: '/nop-ho-so',\r\n        exact: true,\r\n        main: () => <File />,\r\n    },\r\n    {\r\n        path: '/quan-ly-ho-so',\r\n        exact: true,\r\n        main: () => <FileManage />,\r\n    },\r\n    {\r\n        path: '/chi-tiet-ho-so/:id',\r\n        exact: true,\r\n        main: () => <FileDetail />,\r\n    },\r\n    {\r\n        path: '/tra-cuu-ho-so',\r\n        exact: true,\r\n        main: () => <FileSearch />,\r\n    },\r\n];\r\n\r\nexport default Routes;\r\n","export const USER_GUARD = 1;\r\nexport const GUEST_GUARD = 2;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-6 text-white\">Copyright 2023 © LDC | All rights reserved</div>\r\n\r\n                    <div className=\"col-xs-6 text-right text-white\">\r\n                        Liên hệ: 0966944309&nbsp;|&nbsp;\r\n                        <a href=\"/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-white\">\r\n                            Facebook\r\n                        </a>\r\n                        &nbsp;|&nbsp;\r\n                        <a href=\"/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-white\">\r\n                            Điều khoản dịch vụ\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Menu } from 'app/Menu';\r\nimport { Route } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nDesktopMenu.propTypes = {};\r\n\r\nfunction DesktopMenu(props) {\r\n    const MenuLink = ({ m }) => {\r\n        return (\r\n            <Route\r\n                path={m.to}\r\n                exact\r\n                children={({ match }) => {\r\n                    let active = match ? 'active' : '';\r\n                    return (\r\n                        <li className={`dropdown barmenu ${active}`}>\r\n                            <Link to={m.to}>\r\n                                <i className={m.icon}></i>\r\n                                {m.label}\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"mainbar hidden-xs\">\r\n            <div className=\"container\">\r\n                <div className=\"mainbar-collapse collapse\">\r\n                    <ul className=\"nav navbar-nav mainbar-nav\">\r\n                        {Menu().map((m, i) => (\r\n                            <MenuLink key={i} m={m} />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DesktopMenu;\r\n","import { Menu, UserMenu } from 'app/Menu';\r\nimport { logout } from 'components/Auth/userSlice';\r\nimport SweetAlert from 'lib/SweetAlert';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Route } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { loading } from '../Loading/loadingSlice';\r\n\r\nMobileMenu.propTypes = {};\r\n\r\nfunction MobileMenu(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogoutClick = async () => {\r\n        dispatch(loading(true));\r\n        try {\r\n            await dispatch(logout());\r\n        } catch (error) {\r\n            SweetAlert.error(error.message);\r\n        }\r\n        dispatch(loading(false));\r\n    };\r\n\r\n    const MenuLink = ({ m, hideMobile }) => {\r\n        return (\r\n            <Route\r\n                path={m.to}\r\n                exact\r\n                children={({ match }) => {\r\n                    let active = match ? 'active' : '';\r\n                    let hide = hideMobile ? 'visible-xs' : '';\r\n\r\n                    let isLogout = m.to === '/dang-xuat';\r\n                    return (\r\n                        <li className={`${m.class} ${active} ${hide}`}>\r\n                            {isLogout && (\r\n                                <Link onClick={handleLogoutClick} to=\"\">\r\n                                    <i className={m.icon}></i>\r\n                                    &nbsp;&nbsp; {m.label}\r\n                                </Link>\r\n                            )}\r\n\r\n                            {!isLogout && (\r\n                                <Link to={m.to}>\r\n                                    <i className={m.icon}></i>\r\n                                    &nbsp;&nbsp; {m.label}\r\n                                </Link>\r\n                            )}\r\n                        </li>\r\n                    );\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n            {Menu().map((m, i) => (\r\n                <MenuLink key={i} m={m} hideMobile />\r\n            ))}\r\n\r\n            {UserMenu().map((m, i) => (\r\n                <MenuLink key={i} m={m} />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default MobileMenu;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MobileMenu from './MobileMenu';\r\nimport './Index.scss';\r\n\r\nHeader.propTypes = {};\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"container\">\r\n                <div className=\"navbar-header\">\r\n                    <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\r\n                        <i className=\"fa fa-bars\"></i>\r\n                    </button>\r\n                    <Link className=\"navbar-brand navbar-brand-image\" to=\"/\">\r\n                        <div className=\"hidden-xs\">\r\n                            <img src=\"/assets/images/logo.png\" alt=\"Logo\" />\r\n                        </div>\r\n                        <div className=\"visible-xs\">\r\n                            <img src=\"/assets/images/logo.png\" alt=\"Logo\" />\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"navbar-collapse collapse\">\r\n                    <MobileMenu></MobileMenu>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Index.scss';\r\n\r\nLoading.propTypes = {};\r\n\r\nfunction Loading(props) {\r\n    const loading = useSelector((state) => state.loading);\r\n\r\n    return loading ? (\r\n        <div className=\"progress-bg\">\r\n            <div className=\"progress-spinner\">\r\n                <div className=\"sp sp-circle\"></div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <></>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nNotFound.propTypes = {};\r\n\r\nfunction NotFound(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content text-center\">\r\n                <div className=\"content-container\">\r\n                    <div className=\"content-header\">\r\n                        <h2 className=\"content-header-title\">TRANG KHÔNG TỒN TẠI</h2>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h3>404 Not Found</h3>\r\n                            <h4>\r\n                                Trang hiện tại không còn tồn tại do đường link hỏng hoặc đã bị xóa bởi quản trị viên. Bạn có thể quay lại trang chủ\r\n                                tại đây:\r\n                            </h4>\r\n\r\n                            <Link role=\"button\" className=\"btn btn-primary mt-3\" to=\"/\">\r\n                                Trang chủ\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import history from 'app/History';\r\nimport Routes from 'app/Routes';\r\nimport Footer from 'components/common/Footer/Index';\r\nimport DesktopMenu from 'components/common/Header/DesktopMenu';\r\nimport Header from 'components/common/Header/Index';\r\nimport Loading from 'components/common/Loading/Index';\r\nimport NotFound from 'components/NotFound/Index';\r\nimport { GUEST_GUARD, USER_GUARD } from 'constants/guard';\r\nimport { smoothScroll } from 'helpers/SmoothScroll';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport './App.scss';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\n\r\nfunction App() {\r\n    const user = useSelector((state) => state.user.current);\r\n    const loggedIn = !!user.id;\r\n\r\n    history.listen(() => {\r\n        smoothScroll();\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Loading />\r\n            <Header />\r\n            <DesktopMenu></DesktopMenu>\r\n\r\n            <Switch>\r\n                <Route path=\"/404\" exact={true} component={NotFound} />\r\n                {Routes.map((route, i) => {\r\n                    return (\r\n                        <Route\r\n                            key={i}\r\n                            path={route.path}\r\n                            exact={route.exact}\r\n                            render={(props) => {\r\n                                let redirect = false;\r\n                                let to = '/';\r\n\r\n                                if (route.guard === GUEST_GUARD && !loggedIn) {\r\n                                    redirect = true;\r\n                                    to = '/dang-nhap';\r\n                                }\r\n\r\n                                if (route.guard === USER_GUARD && loggedIn) {\r\n                                    redirect = true;\r\n                                    to = '/';\r\n                                }\r\n\r\n                                if (redirect) {\r\n                                    return <Redirect to={to} />;\r\n                                }\r\n\r\n                                return route.main(props);\r\n                            }}\r\n                        />\r\n                    );\r\n                })}\r\n                <Redirect to=\"/404\" />\r\n            </Switch>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import history from 'app/History';\r\nimport store from 'app/Store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}